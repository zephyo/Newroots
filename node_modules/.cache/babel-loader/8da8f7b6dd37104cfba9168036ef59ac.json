{"ast":null,"code":"import _defineProperty from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/User/UserTab.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport Avatar from '../Misc/Avatar';\nimport UploadProfilePicture from '../Misc/UploadProfilePicture';\nimport Dropdown from '../Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData';\nimport Settings from './Settings/Settings';\nimport CheckinModule from './CheckinModule';\n\nvar EditInput = function EditInput(props) {\n  return React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", {\n    name: props.name,\n    type: \"text\",\n    className: \"profile-\" + props.name,\n    placeholder: props.placeholder,\n    value: props.value,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nvar UserTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserTab, _React$Component);\n\n  function UserTab(props) {\n    var _this;\n\n    _classCallCheck(this, UserTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTab).call(this, props));\n\n    _this.setEditMode = function (bool) {\n      if (bool === false) {\n        if (_this.state.madeChanges == true) {\n          var _this$state = _this.state,\n              name = _this$state.name,\n              bio = _this$state.bio,\n              location = _this$state.location,\n              pronouns = _this$state.pronouns;\n\n          _this.props.setUserInfo(name, bio, location, pronouns);\n\n          _this.props.firebase.user(_this.props.uid).update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: _this.state.checkinFreq\n          }).then(function () {\n            _this.setMadeChanges(false);\n\n            _this.setState({\n              editMode: bool\n            });\n          });\n        }\n      } else {\n        _this.setState({\n          editMode: bool\n        });\n      }\n    };\n\n    _this.setMadeChanges = function (bool) {\n      return _this.setState({\n        madeChanges: bool\n      });\n    };\n\n    _this.setShowSettings = function (bool) {\n      return _this.setState({\n        showSettings: bool\n      });\n    };\n\n    _this.setCheckinFreq = function (newFreq) {\n      _this.setState({\n        checkinFreq: newFreq\n      });\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.onChangeUserInfo = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.setPronouns = function (pronoun) {\n      if (pronoun == StaticUserData.NULL_KEY) {\n        _this.setState({\n          pronouns: null\n        });\n\n        return;\n      }\n\n      _this.setState({\n        pronouns: pronoun\n      });\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.state = {\n      editMode: false,\n      name: _this.props.name,\n      bio: _this.props.bio,\n      location: _this.props.location,\n      pronouns: _this.props.pronouns,\n      checkinFreq: _this.props.checkinFreq,\n      PpfURL: _this.props.PpfURL,\n      madeChanges: false,\n      showSettings: false\n    };\n    return _this;\n  }\n\n  _createClass(UserTab, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        name: nextProps.name,\n        bio: nextProps.bio,\n        location: nextProps.location,\n        pronouns: nextProps.pronouns,\n        checkinFreq: nextProps.checkinFreq,\n        PpfURL: nextProps.PpfURL\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.showSettings == true) {\n        return React.createElement(Settings, {\n          firebase: this.props.firebase,\n          uid: this.props.uid,\n          removeUser: this.props.removeUser,\n          updateUserData: this.props.updateUserData,\n          goBack: function goBack() {\n            return _this2.setShowSettings(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }\n\n      var _this$state2 = this.state,\n          pronouns = _this$state2.pronouns,\n          editMode = _this$state2.editMode,\n          name = _this$state2.name,\n          bio = _this$state2.bio,\n          location = _this$state2.location;\n      var cornerButtons,\n          pic,\n          nameEl,\n          bioEl,\n          locationEl,\n          pronounsEl,\n          style = {};\n\n      if (editMode) {\n        style = {\n          display: 'contents'\n        };\n        cornerButtons = React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"edit done\",\n          onClick: function onClick() {\n            return _this2.setEditMode(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Save\"));\n        pic = React.createElement(UploadProfilePicture, {\n          firebase: this.props.firebase,\n          uid: this.props.uid,\n          PpfURL: this.state.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n        nameEl = React.createElement(EditInput, {\n          title: \"Full name\",\n          name: \"name\",\n          placeholder: \"Full name\",\n          value: name,\n          onChange: this.onChangeUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n        bioEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"About me\"), React.createElement(\"textarea\", {\n          name: \"bio\",\n          rows: \"2\",\n          className: \"profile-bio\",\n          placeholder: \"Write about yourself.\",\n          value: bio,\n          onChange: this.onChangeUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }));\n        locationEl = React.createElement(EditInput, {\n          title: \"Location\",\n          name: \"location\",\n          placeholder: \"Where are you?\",\n          value: location,\n          onChange: this.onChangeUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        });\n        pronounsEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Pronouns\"), React.createElement(Dropdown, {\n          options: [StaticUserData.allPronouns[StaticUserData.NULL_KEY], StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]],\n          onChange: this.setPronouns,\n          selected: StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }));\n      } else {\n        cornerButtons = React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"settings\",\n          onClick: function onClick() {\n            return _this2.setShowSettings(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-cog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"edit\",\n          onClick: function onClick() {\n            return _this2.setEditMode(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-pencil\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        })));\n        pic = React.createElement(Avatar, {\n          PpfURL: this.state.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        });\n        nameEl = React.createElement(\"div\", {\n          className: \"profile-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, name);\n\n        if (bio != null) {\n          bioEl = React.createElement(\"p\", {\n            className: \"profile-bio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, bio ? bio : null);\n        }\n\n        if (location != null) {\n          locationEl = React.createElement(\"div\", {\n            className: \"profile-location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-map-marker\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }), location);\n        }\n\n        if (pronouns != null) {\n          pronounsEl = React.createElement(\"div\", {\n            className: \"profile-pronouns\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }), ' ' + pronouns);\n        }\n      }\n\n      return React.createElement(\"section\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, cornerButtons, pic, nameEl, bioEl, React.createElement(\"div\", {\n        className: \"profile-footer\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, locationEl, pronounsEl), React.createElement(CheckinModule, {\n        checkins: this.props.checkins,\n        checkinFreq: this.state.checkinFreq,\n        firebase: this.props.firebase,\n        uid: this.props.uid,\n        setCheckinFreq: this.setCheckinFreq,\n        editMode: this.state.editMode,\n        checkinCategories: this.props.checkinCategories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserTab;\n}(React.Component);\n\nexport default UserTab;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/User/UserTab.js"],"names":["React","$","Avatar","UploadProfilePicture","Dropdown","autosize","StaticUserData","Settings","CheckinModule","EditInput","props","title","name","placeholder","value","onChange","UserTab","setEditMode","bool","state","madeChanges","bio","location","pronouns","setUserInfo","firebase","user","uid","update","checkinFreq","then","setMadeChanges","setState","editMode","setShowSettings","showSettings","setCheckinFreq","newFreq","onChangeUserInfo","event","target","setPronouns","pronoun","NULL_KEY","PpfURL","nextProps","removeUser","updateUserData","cornerButtons","pic","nameEl","bioEl","locationEl","pronounsEl","style","display","allPronouns","FEMALE_PRONOUN","MALE_PRONOUN","NON_PRONOUN","index","icon","checkins","checkinCategories","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport $ from 'jquery';\nimport Avatar from '../Misc/Avatar';\nimport UploadProfilePicture from '../Misc/UploadProfilePicture';\nimport Dropdown from '../Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData'\nimport Settings from './Settings/Settings'\nimport CheckinModule from './CheckinModule'\n\n\nconst EditInput = (props) => {\n  return <div className=\"input-container\">\n    <span className=\"input-label\">\n      {props.title}\n    </span>\n    <input\n      name={props.name}\n      type=\"text\"\n      className={\"profile-\" + props.name}\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={props.onChange}>\n    </input>\n  </div>\n}\n\nclass UserTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      name: this.props.name,\n      bio: this.props.bio,\n      location: this.props.location,\n      pronouns: this.props.pronouns,\n      checkinFreq: this.props.checkinFreq,\n      PpfURL: this.props.PpfURL,\n      madeChanges: false,\n      showSettings: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      name: nextProps.name,\n      bio: nextProps.bio,\n      location: nextProps.location,\n      pronouns: nextProps.pronouns,\n      checkinFreq: nextProps.checkinFreq,\n      PpfURL: nextProps.PpfURL,\n    });\n  }\n\n  componentDidMount() {\n    autosize($('textarea'));\n  }\n\n  setEditMode = (bool) => {\n\n    if (bool === false) {\n      if (this.state.madeChanges == true) {\n\n        let { name, bio, location, pronouns } = this.state;\n\n        this.props.setUserInfo(name, bio, location, pronouns);\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: this.state.checkinFreq\n          }).then(() => {\n            this.setMadeChanges(false);\n            this.setState({ editMode: bool });\n          });\n      }\n    }\n    else {\n      this.setState({ editMode: bool });\n    }\n  };\n\n  setMadeChanges = (bool) => this.setState({ madeChanges: bool });\n\n  setShowSettings = (bool) => this.setState({ showSettings: bool });\n\n  setCheckinFreq = (newFreq) => {\n    this.setState({ checkinFreq: newFreq })\n    this.setMadeChanges(true)\n  }\n\n  onChangeUserInfo = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    this.setMadeChanges(true)\n  };\n\n  setPronouns = (pronoun) => {\n    if (pronoun == StaticUserData.NULL_KEY) {\n      this.setState({ pronouns: null })\n      return;\n    }\n\n    this.setState({ pronouns: pronoun })\n    this.setMadeChanges(true)\n  }\n\n  render() {\n    if (this.state.showSettings == true) {\n      return <Settings\n        firebase={this.props.firebase}\n        uid={this.props.uid}\n        removeUser={this.props.removeUser}\n        updateUserData={this.props.updateUserData}\n        goBack={() => this.setShowSettings(false)}\n      />\n    }\n\n    const { pronouns, editMode, name, bio, location } = this.state;\n\n    let cornerButtons,\n      pic,\n      nameEl,\n      bioEl,\n      locationEl,\n      pronounsEl,\n      style = {};\n\n    if (editMode) {\n      style = {\n        display: 'contents'\n      }\n\n      cornerButtons = (\n        <div className=\"header\">\n          <button className=\"edit done\" onClick={() => this.setEditMode(false)}>Save</button>\n        </div>\n      );\n      pic = <UploadProfilePicture\n        firebase={this.props.firebase}\n        uid={this.props.uid}\n        PpfURL={this.state.PpfURL} />;\n\n      nameEl = (\n        <EditInput\n          title='Full name'\n          name='name'\n          placeholder='Full name'\n          value={name}\n          onChange={this.onChangeUserInfo}\n        />\n      );\n\n      bioEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            About me\n        </span>\n          <textarea\n            name=\"bio\"\n            rows=\"2\"\n            className=\"profile-bio\"\n            placeholder=\"Write about yourself.\"\n            value={bio}\n            onChange={this.onChangeUserInfo}>\n          </textarea>\n        </div>\n\n      );\n\n      locationEl = (\n        <EditInput\n          title='Location'\n          name='location'\n          placeholder='Where are you?'\n          value={location}\n          onChange={this.onChangeUserInfo}\n        />\n      );\n\n      pronounsEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            Pronouns\n          </span>\n          <Dropdown\n            options={[\n              StaticUserData.allPronouns[StaticUserData.NULL_KEY],\n              StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]\n            ]}\n            onChange={this.setPronouns}\n            selected={StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index}\n          ></Dropdown>\n        </div>\n      );\n\n    }\n    else {\n      cornerButtons = (\n        <div className=\"header\">\n          <button className=\"settings\" onClick={() => this.setShowSettings(true)}>\n            <span className=\"jam jam-cog\"></span>\n          </button>\n          <button className=\"edit\" onClick={() => this.setEditMode(true)}>\n            <span className=\"jam jam-pencil\"></span>\n          </button>\n        </div>\n      );\n\n      pic = (\n        <Avatar PpfURL={this.state.PpfURL} />\n      );\n\n      nameEl = (\n        <div className=\"profile-name\">{name}</div>\n      );\n\n      if (bio != null) {\n        bioEl = <p className=\"profile-bio\">\n          {bio ? bio : null}\n        </p>\n      }\n\n      if (location != null) {\n        locationEl = <div className=\"profile-location\">\n          <span className=\"jam checkicon jam-map-marker\"></span>\n          {location}\n        </div>;\n      }\n\n      if (pronouns != null) {\n        pronounsEl = <div className=\"profile-pronouns\">\n          <span className={\"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon}></span>\n          {' ' + pronouns}\n        </div>;\n      }\n    }\n\n    return (\n      <section className=\"user\">\n        {cornerButtons}\n        {pic}\n        {nameEl}\n        {bioEl}\n        <div className=\"profile-footer\" style={style}>\n          {locationEl}\n          {pronounsEl}\n        </div>\n\n        <CheckinModule\n          checkins={this.props.checkins}\n          checkinFreq={this.state.checkinFreq}\n          firebase={this.props.firebase}\n          uid={this.props.uid}\n          setCheckinFreq={this.setCheckinFreq}\n          editMode={this.state.editMode}\n          checkinCategories={this.props.checkinCategories}\n        />\n\n      </section>\n    );\n  }\n}\n\n\nexport default UserTab;"]},"metadata":{},"sourceType":"module"}