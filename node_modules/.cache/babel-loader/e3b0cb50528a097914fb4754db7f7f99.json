{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/NetworkTab.js\";\nimport React, { Component } from 'react';\nimport AddFriend from './AddFriend';\nimport { withFirebase } from './Firebase';\nimport { request } from 'http';\nimport Avatar from './Avatar';\nimport graphics3 from '../graphics/3.png';\nimport ErrorMsg from './ErrorMsg';\nvar AddFriendFB = withFirebase(AddFriend);\n\nvar NetworkTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NetworkTab, _React$Component);\n\n  function NetworkTab(props) {\n    var _this;\n\n    _classCallCheck(this, NetworkTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NetworkTab).call(this, props));\n\n    _this.setAddFriend = function (bool) {\n      _this.setState({\n        addFriend: bool\n      });\n    };\n\n    _this.filterNetwork = function (event) {\n      var word = event.target.value;\n    };\n\n    _this.setRequests = function (requests) {\n      _this.setState({\n        requests: requests\n      });\n\n      _this.props.setRequests(requests);\n    };\n\n    _this.setNetworkUsers = function (network) {\n      var users = _this.state.networkUsers;\n\n      if (users == null || users.length == 0) {\n        _this.setState({\n          network: network\n        });\n\n        _this.loadNetworkUsers();\n      } else {\n        //dfind difference  btw n prev state and this state, add to networkUsers\n        var prev = _this.state.network;\n        var difference = network.filter(function (i) {\n          return prev.indexOf(i) < 0;\n        });\n        difference.forEach(function (val) {\n          _this.props.firebase.user(val).get().then(function (doc) {\n            users.push(doc.data());\n\n            _this.setState({\n              networkUsers: users\n            });\n          });\n        });\n\n        _this.setState({\n          network: network\n        });\n      }\n\n      _this.props.setNetwork(network);\n    };\n\n    _this.loadNetworkUsers = function () {\n      _this.setState({\n        loading: true,\n        networkUsers: []\n      });\n\n      var users = [];\n      var counter = 0;\n\n      for (var i = 0; i < _this.state.network.length; i++) {\n        _this.props.firebase.user(_this.state.network[i]).get().then(function (doc) {\n          users.push(doc.data());\n\n          _this.setState({\n            networkUsers: users\n          });\n\n          counter++;\n\n          if (counter === _this.state.network.length) {\n            _this.setState({\n              loading: false\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      addFriend: false,\n      network: _this.props.network,\n      networkUsers: [],\n      loading: false,\n      requests: _this.props.requests\n    };\n    return _this;\n  }\n\n  _createClass(NetworkTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ref = this.props.firebase.user(this.props.uid); // console.log(JSON.stringify(this.state.requests));\n\n      ref.onSnapshot(function (doc) {\n        var data = doc.data();\n\n        _this2.setNetworkUsers(data.network);\n\n        _this2.setRequests(data.requests); // console.log(JSON.stringify(this.state.requests));\n\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*addName = (id, name) => {\n        return this.props.firebase.user(id).update({\n              easy_name: name.toLowerCase()\n          })\n          .then(function() {\n              console.log(\"Document successfully updated!\");\n          })\n          .catch(function(error) {\n              // The document probably doesn't exist.\n              console.error(\"Error updating document: \", error);\n          });\n    }\n    easyName = () => {\n        let element = this;\n        this.props.firebase.users().get()\n          .then(function(querySnapshot) {\n              querySnapshot.forEach(function(doc) {\n                  // doc.data() is never undefined for query doc snapshots\n                  console.log(doc.id, \" => \", doc.data());\n                  element.addName(doc.id,doc.data().name);\n              });\n          })\n          .catch(function(error) {\n              console.log(\"Error getting documents: \", error);\n          });\n    }*/\n    value: function render() {\n      var _this3 = this;\n\n      if ((!this.state.networkUsers || this.state.networkUsers.length === 0) && this.state.network.length > 0) {\n        if (this.state.loading == false) {\n          this.loadNetworkUsers();\n        }\n      }\n\n      var alert = null;\n\n      if (this.state.requests.length > 0) {\n        alert = React.createElement(\"span\", {\n          className: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, this.state.requests.length);\n      }\n\n      var network = [];\n\n      for (var i = 0; i < this.state.networkUsers.length; i++) {\n        var user = this.state.networkUsers[i];\n        if (user == undefined) continue;\n        var addEl = React.createElement(\"div\", {\n          className: \"friend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          PpfURL: user.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, user.name), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-heart\",\n          style: {\n            color: '#e38882'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })));\n        network.push(addEl);\n      }\n\n      return React.createElement(\"section\", {\n        className: \"network\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Your support network\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: this.filterNetwork,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"search-friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-search\",\n        style: {\n          color: '#9FC6C1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        id: \"add-friends\",\n        onClick: function onClick() {\n          return _this3.setAddFriend(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-user-plus\",\n        style: {\n          color: '#9FC6C1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, alert))), React.createElement(\"div\", {\n        className: \"friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, network.length == 0 ? React.createElement(ErrorMsg, {\n        src: graphics3,\n        header: \"No support yet.\",\n        msg: \"Why not invite someone you trust?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }) : network), this.state.addFriend ? React.createElement(AddFriendFB, {\n        setAddFriend: this.setAddFriend,\n        uid: this.props.uid,\n        requests: this.state.requests,\n        network: this.state.network,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return NetworkTab;\n}(React.Component);\n\n;\nexport default NetworkTab;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/NetworkTab.js"],"names":["React","Component","AddFriend","withFirebase","request","Avatar","graphics3","ErrorMsg","AddFriendFB","NetworkTab","props","setAddFriend","bool","setState","addFriend","filterNetwork","event","word","target","value","setRequests","requests","setNetworkUsers","network","users","state","networkUsers","length","loadNetworkUsers","prev","difference","filter","i","indexOf","forEach","val","firebase","user","get","then","doc","push","data","setNetwork","loading","counter","ref","uid","onSnapshot","alert","undefined","addEl","PpfURL","name","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AddFriend from './AddFriend';\nimport { withFirebase } from './Firebase';\nimport { request } from 'http';\nimport Avatar from './Avatar';\n\nimport graphics3 from '../graphics/3.png';\nimport ErrorMsg from './ErrorMsg';\n\nconst AddFriendFB = withFirebase(AddFriend);\n\nclass NetworkTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addFriend: false,\n      network: this.props.network,\n      networkUsers: [],\n      loading: false,\n      requests: this.props.requests,\n    };\n  }\n\n  componentDidMount() {\n    let ref = this.props.firebase.user(this.props.uid);\n\n    // console.log(JSON.stringify(this.state.requests));\n\n    ref.onSnapshot((doc) => {\n      let data = doc.data();\n      this.setNetworkUsers(data.network);\n      this.setRequests(data.requests);\n      // console.log(JSON.stringify(this.state.requests));\n    })\n  }\n\n  setAddFriend = (bool) => {\n    this.setState({\n      addFriend: bool\n    });\n  }\n\n  filterNetwork = (event) => {\n    let word = event.target.value;\n  }\n\n  setRequests = (requests) => {\n    this.setState({ requests: requests });\n    this.props.setRequests(requests);\n  }\n\n  //expect: array of uids\n  setNetworkUsers = (network) => {\n    let users = this.state.networkUsers;\n    if (users == null || users.length == 0) {\n      this.setState({ network: network });\n      this.loadNetworkUsers();\n    }\n    else {\n      //dfind difference  btw n prev state and this state, add to networkUsers\n      let prev = this.state.network;\n\n      let difference = network.filter(function (i) { return prev.indexOf(i) < 0 });\n\n      difference.forEach((val) => {\n        this.props.firebase\n          .user(val)\n          .get().then((doc) => {\n            users.push(doc.data());\n            this.setState({ networkUsers: users });\n          });\n      });\n\n      this.setState({ network: network });\n    }\n    this.props.setNetwork(network);\n  }\n\n  loadNetworkUsers = () => {\n    this.setState({ loading: true, networkUsers: [] });\n    let users = [];\n    let counter = 0;\n\n    for (let i = 0; i < this.state.network.length; i++) {\n\n      this.props.firebase\n        .user(this.state.network[i])\n        .get().then((doc) => {\n          users.push(doc.data());\n          this.setState({ networkUsers: users });\n          counter++;\n          if (counter === this.state.network.length) {\n            this.setState({ loading: false });\n          }\n        });\n    }\n  }\n  /*addName = (id, name) => {\n      return this.props.firebase.user(id).update({\n            easy_name: name.toLowerCase()\n        })\n        .then(function() {\n            console.log(\"Document successfully updated!\");\n        })\n        .catch(function(error) {\n            // The document probably doesn't exist.\n            console.error(\"Error updating document: \", error);\n        });\n  }\n  easyName = () => {\n      let element = this;\n      this.props.firebase.users().get()\n        .then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                // doc.data() is never undefined for query doc snapshots\n                console.log(doc.id, \" => \", doc.data());\n                element.addName(doc.id,doc.data().name);\n            });\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n  }*/\n  render() {\n    if ((!this.state.networkUsers || this.state.networkUsers.length === 0) &&\n      this.state.network.length > 0) {\n      if (this.state.loading == false) {\n        this.loadNetworkUsers();\n      }\n    }\n\n    let alert = null;\n    if (this.state.requests.length > 0) {\n      alert = (\n        <span className=\"alert\">{this.state.requests.length}</span>\n      );\n    }\n\n    let network = [];\n    for (var i = 0; i < this.state.networkUsers.length; i++) {\n      let user = this.state.networkUsers[i];\n      if (user == undefined) continue;\n      var addEl = (\n        <div className=\"friend\">\n          <Avatar PpfURL={user.PpfURL} />\n          <span>{user.name}</span>\n          <button><span className=\"jam jam-heart\" style={{ color: '#e38882' }}></span></button>\n        </div>\n      );\n      network.push(addEl);\n    }\n\n\n    return (\n      <section className=\"network\">\n        <h2>Your support network</h2>\n        <div className=\"header\">\n          <div className=\"search-bar\">\n            <input type=\"text\" placeholder=\"Search\" onChange={this.filterNetwork} />\n            <button id=\"search-friends\"><span className=\"jam jam-search\" style={{ color: '#9FC6C1' }}></span></button>\n          </div>\n          <button id=\"add-friends\" onClick={() => this.setAddFriend(true)} >\n            <span className=\"jam jam-user-plus\" style={{ color: '#9FC6C1' }}>\n              {alert}\n            </span>\n\n\n\n          </button>\n        </div>\n        <div className=\"friends\">\n          {network.length == 0 ?\n            <ErrorMsg\n              src={graphics3}\n              header='No support yet.'\n              msg='Why not invite someone you trust?'\n            />\n            : network\n          }\n        </div>\n        {(this.state.addFriend ?\n          <AddFriendFB\n            setAddFriend={this.setAddFriend}\n            uid={this.props.uid}\n            requests={this.state.requests}\n            network={this.state.network}\n          /> : null)}\n      </section>\n    );\n  }\n};\n\nexport default NetworkTab;"]},"metadata":{},"sourceType":"module"}