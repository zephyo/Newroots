{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/CheckinPost.js\";\nimport React from 'react';\nimport Post from './Post';\nimport StaticUserData from '../../data/StaticUserData';\n/*\n  props:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -checkinData : array\n  -conversation :array\n*/\n\nvar CheckinPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckinPost, _React$Component);\n\n  function CheckinPost(props) {\n    var _this;\n\n    _classCallCheck(this, CheckinPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckinPost).call(this, props));\n\n    _this.Save = function () {};\n\n    _this.setEdit = function (bool) {\n      _this.setState({\n        isEditing: bool\n      });\n    };\n\n    _this.getContent = function () {\n      if (_this.state.isEditing == true) {// return;\n      }\n\n      var checkinData = _this.props.checkinData;\n      var checkins = [];\n\n      for (var i = 0; i < checkinData.length; i++) {\n        var checkin = checkinData[i];\n\n        if (_this.isCheckinVisible(checkin)) {\n          continue;\n        }\n\n        var el = void 0,\n            moodContent = null,\n            commentContent = checkin.comment;\n\n        switch (checkin.type) {\n          case StaticUserData.QTYPE_SCALE:\n            moodContent = checkin.answer;\n            break;\n\n          case StaticUserData.QTYPE_YESNO:\n            moodContent = checkin.answer == 'yes' ? React.createElement(\"div\", {\n              className: \"mood-icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"jam jam-check\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            })) : React.createElement(\"div\", {\n              className: \"mood-icon no\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"jam jam-close\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }));\n            break;\n\n          case StaticUserData.QTYPE_TEXT:\n            commentContent = checkin.answer;\n            break;\n        }\n\n        el = React.createElement(\"div\", {\n          key: 'key' + i,\n          className: \"check-in-q\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mood\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, checkin.q), moodContent), React.createElement(\"div\", {\n          className: \"content comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, commentContent));\n        checkins.push(el);\n      }\n\n      return checkins;\n    };\n\n    _this.isCheckinVisible = function (checkin) {\n      return _this.props.posterUid != _this.props.uid && (checkin.visibility == StaticUserData.VIS_PRIVATE || checkin.visibility == StaticUserData.VIS_NETWORK && _this.props.yourNetwork.indexOf(_this.props.posterUid) < 0);\n    };\n\n    _this.state = {\n      isEditing: false\n    };\n    return _this;\n  }\n\n  _createClass(CheckinPost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Post, {\n        postid: this.props.postid,\n        posterUid: this.props.posterUid,\n        uid: this.props.uid,\n        yourNetwork: this.props.yourNetwork,\n        PpfURL: this.props.PpfURL,\n        yourPpfURL: this.props.yourPpfURL,\n        firebase: this.props.firebase,\n        name: this.props.name,\n        timestamp: this.props.timestamp,\n        postClass: \"checkin\",\n        actionStr: \"checked in\",\n        content: this.getContent(),\n        setEdit: this.setEdit,\n        Save: this.Save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CheckinPost;\n}(React.Component);\n\n;\nexport default CheckinPost;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/CheckinPost.js"],"names":["React","Post","StaticUserData","CheckinPost","props","Save","setEdit","bool","setState","isEditing","getContent","state","checkinData","checkins","i","length","checkin","isCheckinVisible","el","moodContent","commentContent","comment","type","QTYPE_SCALE","answer","QTYPE_YESNO","QTYPE_TEXT","q","push","posterUid","uid","visibility","VIS_PRIVATE","VIS_NETWORK","yourNetwork","indexOf","postid","PpfURL","yourPpfURL","firebase","name","timestamp","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Post from './Post';\nimport StaticUserData from '../../data/StaticUserData';\n\n/*\n  props:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -checkinData : array\n  -conversation :array\n*/\n\nclass CheckinPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    }\n  }\n\n  Save = () => {\n\n  }\n\n  setEdit = (bool) => {\n    this.setState({ isEditing: bool })\n  }\n\n  getContent = () => {\n    if (this.state.isEditing == true) {\n      // return;\n    }\n\n\n    let checkinData = this.props.checkinData;\n\n    let checkins = [];\n\n    for (var i = 0; i < checkinData.length; i++) {\n      let checkin = checkinData[i];\n\n      if (this.isCheckinVisible(checkin)) {\n        continue;\n      }\n\n      let el, moodContent = null, commentContent = checkin.comment;\n\n      switch (checkin.type) {\n        case StaticUserData.QTYPE_SCALE:\n          moodContent = checkin.answer;\n          break;\n\n        case StaticUserData.QTYPE_YESNO:\n          moodContent =\n            checkin.answer == 'yes' ?\n              <div className=\"mood-icon\">\n                <span className=\"jam jam-check\" ></span>\n              </div>\n              :\n              <div className=\"mood-icon no\">\n                <span className=\"jam jam-close\" ></span>\n              </div>;\n          break;\n\n        case StaticUserData.QTYPE_TEXT:\n          commentContent = checkin.answer;\n          break;\n      }\n\n      el = (\n        <div\n          key={'key' + i}\n          className=\"check-in-q\">\n          <div className=\"mood\">\n            <span>{checkin.q}</span>\n            {moodContent}\n          </div>\n          <div className=\"content comment\">{commentContent}</div>\n        </div>\n      );\n\n      checkins.push(el);\n    }\n    return checkins;\n  }\n\n  isCheckinVisible = (checkin) => {\n    return this.props.posterUid != this.props.uid &&\n      (checkin.visibility == StaticUserData.VIS_PRIVATE ||\n        (checkin.visibility == StaticUserData.VIS_NETWORK && this.props.yourNetwork.indexOf(this.props.posterUid) < 0));\n  }\n\n  render() {\n    return <Post\n      postid={this.props.postid}\n      posterUid={this.props.posterUid}\n      uid={this.props.uid}\n      yourNetwork={this.props.yourNetwork}\n\n      PpfURL={this.props.PpfURL}\n      yourPpfURL={this.props.yourPpfURL}\n\n      firebase={this.props.firebase}\n\n      name={this.props.name}\n      timestamp={this.props.timestamp}\n\n      postClass='checkin'\n      actionStr='checked in'\n      content={this.getContent()}\n      setEdit={this.setEdit}\n      Save={this.Save}\n    />\n  }\n};\n\nexport default CheckinPost;\n"]},"metadata":{},"sourceType":"module"}