{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Network/ListOfUsers.js\";\nimport React from 'react';\n/*\nprops:\n  containerClass\n  firebase\n  uid\n  key (e.g. muteList, network)\n  renderFunc : function that takes in user object and outputs component\n\n*/\n\nvar ListOfUsers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListOfUsers, _React$Component);\n\n  function ListOfUsers(props) {\n    var _this;\n\n    _classCallCheck(this, ListOfUsers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListOfUsers).call(this, props));\n\n    _this.updateLoadedUsers = function (newUids) {\n      if (newUids == null || newUids.length == 0) return;\n      var users = _this.state.loadedUsers;\n\n      if (users == null || Object.keys(users).length == 0) {\n        _this.loadUsers(newUids);\n      } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var uid = _step.value;\n            if (uid in users) return \"continue\";\n\n            _this.props.firebase.user(uid).get().then(function (doc) {\n              users[uid] = doc.data();\n\n              _this.setState({\n                loadedUsers: users\n              });\n            });\n          };\n\n          for (var _iterator = newUids[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ret = _loop();\n\n            if (_ret === \"continue\") continue;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    };\n\n    _this.loadUsers = function (uids) {\n      var users = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop2 = function _loop2() {\n          var uid = _step2.value;\n\n          _this.props.firebase.user(uid).get().then(function (doc) {\n            users[uid] = doc.data();\n\n            _this.setState({\n              loadedUsers: users\n            });\n          });\n        };\n\n        for (var _iterator2 = uids[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop2();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    };\n\n    _this.state = {\n      loadedUsers: {}\n    };\n    return _this;\n  }\n\n  _createClass(ListOfUsers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ref = this.props.firebase.user(this.props.uid);\n      ref.onSnapshot(function (doc) {\n        var data = doc.data();\n\n        _this2.setNetworkUsers(data[_this2.props.key]);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loadedUsers = this.state.loadedUsers;\n      var renderUsers = [];\n\n      for (var key in loadedUsers) {\n        renderUsers.push(this.props.renderFunc(loadedUsers[key]));\n      }\n\n      return React.createElement(\"div\", {\n        className: this.props.containerClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, renderUsers);\n    }\n  }]);\n\n  return ListOfUsers;\n}(React.Component);\n\n;\nexport default ListOfUsers;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Network/ListOfUsers.js"],"names":["React","ListOfUsers","props","updateLoadedUsers","newUids","length","users","state","loadedUsers","Object","keys","loadUsers","uid","firebase","user","get","then","doc","data","setState","uids","ref","onSnapshot","setNetworkUsers","key","renderUsers","push","renderFunc","containerClass","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/*\nprops:\n  containerClass\n  firebase\n  uid\n  key (e.g. muteList, network)\n  renderFunc : function that takes in user object and outputs component\n\n*/\nclass ListOfUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedUsers: {},\n    };\n  }\n\n  componentDidMount() {\n    let ref = this.props.firebase.user(this.props.uid);\n\n    ref.onSnapshot((doc) => {\n      let data = doc.data();\n      this.setNetworkUsers(data[this.props.key]);\n    })\n  }\n\n  updateLoadedUsers = (newUids) => {\n    if (newUids == null || newUids.length == 0) return;\n\n    let users = this.state.loadedUsers;\n\n    if (users == null || Object.keys(users).length == 0) {\n      this.loadUsers(newUids);\n    }\n    else {\n      for (let uid of newUids) {\n        if (uid in users) continue;\n\n        this.props.firebase.user(uid)\n          .get()\n          .then((doc) => {\n            users[uid] = doc.data();\n            this.setState({ loadedUsers: users });\n          })\n      }\n    }\n  }\n\n  loadUsers = (uids) => {\n    let users = {};\n\n    for (let uid of uids) {\n      this.props.firebase.user(uid)\n        .get()\n        .then((doc) => {\n          users[uid] = doc.data();\n          this.setState({ loadedUsers: users });\n        });\n    }\n  }\n\n  render() {\n    const { loadedUsers } = this.state;\n\n    let renderUsers = [];\n    for (let key in loadedUsers) {\n      renderUsers.push(this.props.renderFunc(loadedUsers[key]));\n    }\n\n    return <div className={this.props.containerClass}>\n      {renderUsers}\n    </div>;\n  }\n\n};\n\nexport default ListOfUsers;"]},"metadata":{},"sourceType":"module"}