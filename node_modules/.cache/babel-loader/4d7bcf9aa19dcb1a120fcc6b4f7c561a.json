{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Network/UserPage.js\";\nimport React from 'react';\nimport Avatar from '../Misc/Avatar';\nimport CheckInRow from './CheckinRow';\nimport MoreButton from '../Feed/MoreButton';\nimport StaticUserData from '../../data/StaticUserData';\nvar muteListener = null;\n\nvar UserPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPage, _React$Component);\n\n  function UserPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPage).call(this, props));\n\n    _this.setMuted = function (state) {\n      return _this.setState({\n        muted: state\n      });\n    };\n\n    _this.getMoreOptions = function () {\n      var options = [{\n        text: 'Report ' + _this.props.name,\n        onClick: function onClick() {\n          return _this.props.firebase.reportPoster(_this.props.myUID, _this.props.theirUID);\n        },\n        class: 'grey'\n      }];\n\n      if (_this.state.muted == true) {\n        options.push({\n          text: 'Unmute ' + _this.props.name,\n          onClick: function onClick() {\n            return _this.setMuted(false);\n          },\n          class: 'grey'\n        });\n      } else {\n        options.push({\n          text: 'Mute ' + _this.props.name,\n          onClick: function onClick() {\n            return _this.setMuted(true);\n          },\n          class: 'grey'\n        });\n      }\n\n      return options;\n    };\n\n    _this.inNetwork = function (myUID, theirNetwork) {\n      return theirNetwork.indexOf(myUID) > -1;\n    };\n\n    _this.Close = function () {\n      if (_this.state.initialState != _this.state.muted) {\n        if (_this.state.muted) {\n          _this.props.firebase.mutePoster(_this.props.myUID, _this.props.theirUID, _this.props.closeUserPage);\n        } else {\n          _this.props.firebase.unmutePoster(_this.props.myUID, _this.props.theirUID, _this.props.closeUserPage);\n        }\n      }\n    };\n\n    _this.state = {\n      initialState: false,\n      muted: false\n    };\n    return _this;\n  }\n\n  _createClass(UserPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.firebase.checkIfMuted(this.props.myUID, this.props.theirUID, function () {\n        _this2.setState({\n          initialState: true\n        });\n\n        _this2.setMuted(true);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          checkins = _this$props.checkins,\n          network = _this$props.network,\n          location = _this$props.location,\n          myUID = _this$props.myUID,\n          bio = _this$props.bio,\n          pronouns = _this$props.pronouns,\n          PpfURL = _this$props.PpfURL;\n      var checkinsEl = [];\n\n      if (checkins != null) {\n        for (var i = 0; i < checkins.length; i++) {\n          var checkin = checkins[i];\n\n          if (checkin.visibility == StaticUserData.VIS_PUBLIC || checkin.visibility == StaticUserData.VIS_NETWORK && this.inNetwork(myUID, network)) {\n            checkinsEl.push(React.createElement(CheckInRow, {\n              checkin: checkin,\n              trash: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }));\n          }\n        }\n      }\n\n      var locationEl = null,\n          bioEl = null,\n          pronounEl = null;\n\n      if (location != null) {\n        locationEl = React.createElement(\"div\", {\n          className: \"profile-location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam checkicon jam-map-marker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), location);\n      }\n\n      if (bio != null) {\n        bioEl = React.createElement(\"p\", {\n          className: \"profile-bio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \" \", bio);\n      }\n\n      if (pronouns != null) {\n        pronounEl = React.createElement(\"p\", {\n          className: \"profile-pronoun\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), pronouns);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"modal user-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.Close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Avatar, {\n        PpfURL: PpfURL,\n        content: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"profile-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, name, React.createElement(MoreButton, {\n        modalOptions: this.getMoreOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), locationEl, pronounEl, bioEl, React.createElement(\"div\", {\n        className: \"action-buts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam checkicon jam-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), \"Add friend\"), React.createElement(\"button\", {\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam checkicon jam-map-marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), \"Message\")), React.createElement(\"div\", {\n        className: \"check-in-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Their check-in\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Check-in questions\"), React.createElement(\"ul\", {\n        className: \"your-checkins\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, checkinsEl)), React.createElement(\"button\", {\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Report abuse\"));\n    }\n  }]);\n\n  return UserPage;\n}(React.Component);\n\nexport default UserPage;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Network/UserPage.js"],"names":["React","Avatar","CheckInRow","MoreButton","StaticUserData","muteListener","UserPage","props","setMuted","state","setState","muted","getMoreOptions","options","text","name","onClick","firebase","reportPoster","myUID","theirUID","class","push","inNetwork","theirNetwork","indexOf","Close","initialState","mutePoster","closeUserPage","unmutePoster","checkIfMuted","checkins","network","location","bio","pronouns","PpfURL","checkinsEl","i","length","checkin","visibility","VIS_PUBLIC","VIS_NETWORK","locationEl","bioEl","pronounEl","allPronouns","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '../Misc/Avatar';\nimport CheckInRow from './CheckinRow';\nimport MoreButton from '../Feed/MoreButton'\n\nimport StaticUserData from '../../data/StaticUserData'\n\nlet muteListener = null;\n\nclass UserPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState: false,\n      muted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.firebase.checkIfMuted(this.props.myUID, this.props.theirUID,\n      () => {\n        this.setState({ initialState: true });\n        this.setMuted(true);\n      })\n  }\n\n  setMuted = (state) => this.setState({ muted: state });\n\n  getMoreOptions = () => {\n    let options = [\n      {\n        text: 'Report ' + this.props.name,\n        onClick: () => this.props.firebase.reportPoster(this.props.myUID,\n          this.props.theirUID),\n        class: 'grey'\n      }\n    ];\n    if (this.state.muted == true) {\n      options.push(\n        {\n          text: 'Unmute ' + this.props.name,\n          onClick: () => this.setMuted(false),\n          class: 'grey'\n        });\n    } else {\n      options.push(\n        {\n          text: 'Mute ' + this.props.name,\n          onClick: () => this.setMuted(true),\n          class: 'grey'\n        });\n    }\n    return options;\n  }\n\n\n  inNetwork = (myUID, theirNetwork) => {\n    return theirNetwork.indexOf(myUID) > -1;\n  }\n\n  Close = () => {\n    if (this.state.initialState != this.state.muted) {\n      if (this.state.muted) {\n        this.props.firebase.mutePoster(this.props.myUID,\n          this.props.theirUID,\n          this.props.closeUserPage)\n      } else {\n        this.props.firebase.unmutePoster(this.props.myUID,\n          this.props.theirUID,\n          this.props.closeUserPage)\n      }\n    }\n  }\n\n  render() {\n    const {\n      name,\n      checkins,\n      network,\n      location,\n      myUID,\n      bio,\n      pronouns,\n      PpfURL,\n    } = this.props;\n\n    let checkinsEl = [];\n    if (checkins != null) {\n      for (let i = 0; i < checkins.length; i++) {\n        const checkin = checkins[i];\n\n        if (checkin.visibility == StaticUserData.VIS_PUBLIC ||\n          (checkin.visibility == StaticUserData.VIS_NETWORK && this.inNetwork(myUID, network))) {\n          checkinsEl.push(\n            <CheckInRow\n              checkin={checkin}\n              trash={false}\n            />\n          );\n        }\n      }\n    }\n\n    let locationEl = null,\n      bioEl = null,\n      pronounEl = null;\n\n    if (location != null) {\n      locationEl =\n        <div className=\"profile-location\">\n          <span className=\"jam checkicon jam-map-marker\"></span>\n          {location}\n        </div>;\n    }\n\n    if (bio != null) {\n      bioEl = <p className=\"profile-bio\"> {bio}</p>\n    }\n\n    if (pronouns != null) {\n      pronounEl =\n        <p className=\"profile-pronoun\">\n          <span className={\"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns]}></span>\n          {pronouns}\n        </p>\n    }\n\n\n    return (\n      <div className=\"modal user-page\">\n        <button className=\"close\" onClick={this.Close}>\n          <span className=\"jam jam-close\"></span>\n        </button>\n\n        <Avatar PpfURL={PpfURL}\n          content={null}\n        />\n\n        <div className=\"profile-name\">\n          {name}\n          <MoreButton\n            modalOptions={this.getMoreOptions()}\n          />\n        </div>\n\n        {locationEl}\n        {pronounEl}\n        {bioEl}\n\n        <div className=\"action-buts\">\n          <button\n            onClick={() => {\n            }}>\n            <span className=\"jam checkicon jam-message\"></span>\n            Add friend\n          </button>\n\n          <button\n            onClick={() => {\n            }}>\n            <span className=\"jam checkicon jam-map-marker\"></span>\n            Message\n          </button>\n\n        </div>\n\n\n        <div className=\"check-in-edit\">\n          <h2>Their check-in</h2>\n\n          <h3>Check-in questions</h3>\n          <ul className=\"your-checkins\">\n            {checkinsEl}\n          </ul>\n        </div>\n\n\n\n        <button\n          onClick={() => {\n          }}>\n          Report abuse\n          </button>\n\n      </div>\n    );\n  }\n}\n\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}