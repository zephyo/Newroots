{"ast":null,"code":"import _defineProperty from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gollyzoom/Documents/GitHub/treehacks/src/components/AddFriend.js\";\nimport React, { Component } from 'react';\nimport plant from '../graphics/icon.png';\nimport $ from 'jquery';\nimport Avatar from './Avatar';\nimport * as firebase from 'firebase';\n\nvar AddFriend =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFriend, _React$Component);\n\n  function AddFriend(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFriend).call(this, props));\n\n    _this.setAddedFriend = function (mssg) {\n      _this.setState({\n        addedFriend: mssg\n      });\n    };\n\n    _this.setInvitedFriend = function (mssg) {\n      _this.setState({\n        invitedFriend: mssg\n      });\n    };\n\n    _this.validateEmail = function (email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    };\n\n    _this.genList = function (ref, search_val) {\n      var tempSug = [];\n      ref.get().then(function (querySnapshot) {\n        // console.log(this.props.uid)\n\n        /*this.props.firebase.users().doc(querySnapshot.docs[0].id)\n          .update({\n            \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n          });\n        this.setAddedFriend('sent request!');*/\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          tempSug.push({\n            uid: doc.id,\n            name: doc.data().name,\n            url: doc.data().PpfURL\n          });\n        });\n\n        _this.setState({\n          suggestions: tempSug\n        });\n      }).catch(function (err) {\n        _this.setAddedFriend(\"couldn't find \" + search_val);\n      });\n    };\n\n    _this.confirmAdd = function (uid) {\n      console.log(\"adding \" + uid);\n\n      _this.props.firebase.user(uid).update({\n        \"requests\": firebase.firestore.FieldValue.arrayUnion(_this.props.uid)\n      });\n\n      _this.setAddedFriend('sent request!');\n    };\n\n    _this.addFriend = function () {\n      // if (this.state.loading === true) return;\n\n      /*let email = \"\";\n      let name = \"\";*/\n      var ref = \"\";\n      var search_val = $('#add-friend-email').val();\n\n      if (_this.validateEmail(search_val)) {\n        //email = $('#add-friend-email').val();\n        ref = _this.props.firebase.users().where(\"email\", \"==\", search_val);\n      } else {\n        //name = $('#add-friend-email').val();\n        search_val = search_val.toLowerCase();\n        ref = _this.props.firebase.users().where(\"easy_name\", \"==\", search_val);\n      }\n\n      _this.genList(ref, search_val);\n      /*ref.get()\n        .then(querySnapshot => {\n          // console.log(this.props.uid)\n          this.props.firebase.users().doc(querySnapshot.docs[0].id)\n            .update({\n              \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n            });\n          this.setAddedFriend('sent request!');\n          \n        })\n        .catch(err => {\n          this.setAddedFriend(\"couldn't find \" + search_val);\n        });*/\n      // if (this.state.allUsers.length == 0){\n      // }else{\n      //   this.sendRequest(users[i].uid);\n      // }\n      // let users = this.state.users;\n      // for (var i = 0; i < users.length; i++) {\n      //   console.log(JSON.stringify(users[i]));\n      //   if (users[i].email == email) {\n      //     //are they your friend?\n      //     let index = users.indexOf(users[i].uid);\n      //     if (index > -1) {\n      //       this.setAddedFriend(\"you're already friends!\");\n      //       return;\n      //     }\n      //     //send request\n      //     return;\n      //   }\n      // }\n\n    };\n\n    _this.inviteFriend = function () {\n      _this.setAddedFriend('invited!');\n    };\n\n    _this.acceptRequest = function (uid) {\n      //remove uid from your request\n      _this.removeRequest(uid); //insert uid to your network array and their network array\n      //propogate backwards - update networktab's state and app's state\n\n\n      var network = _this.state.network;\n      network.push(uid);\n\n      _this.setState({\n        network: network\n      });\n\n      _this.props.firebase.user(_this.props.uid).update({\n        network: network\n      });\n\n      _this.props.firebase.user(uid).update({\n        network: firebase.firestore.FieldValue.arrayUnion(_this.props.uid)\n      }); //update their feed with your posts; update your feed with their posts\n\n\n      _this.props.firebase.feed(uid).where('uid', '==', uid).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.props.firebase.feed(_this.props.uid).doc(doc.id).set(doc.data());\n        });\n      });\n\n      _this.props.firebase.feed(_this.props.uid).where('uid', '==', _this.props.uid).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.props.firebase.feed(uid).doc(doc.id).set(doc.data());\n        });\n      });\n    };\n\n    _this.removeRequest = function (uid) {\n      //remove uid from your requests\n      // let requestArr = this.state.requests;\n      // let index = requestArr.indexOf(uid);\n      // if (index > -1) {\n      //   requestArr.splice(index, 1);\n      // }\n      // let usersArr = this.state.requestUsers;\n      // for (var i = 0; i < usersArr.length; i++) {\n      //   if (usersArr[i].uid == uid) {\n      //     usersArr.splice(i, 1);\n      //   }\n      // }\n      // this.setState({ requests: requestArr, requestUsers: usersArr });\n      // this.props.firebase\n      //   .user(this.props.uid)\n      //   .update({\n      //     requests: requestArr\n      //   });\n      _this.props.firebase.user(_this.props.uid).update({\n        \"requests\": firebase.firestore.FieldValue.arrayRemove(uid)\n      }).then(function () {\n        var users = _this.state.requestUsers;\n\n        for (var i = 0; i < users.length; i++) {\n          if (users[i].uid == uid) {\n            users.splice(i, 1);\n\n            _this.setState({\n              requestUsers: users\n            });\n          }\n        }\n      });\n    };\n\n    _this.loadRequestUsers = function () {\n      _this.setState({\n        loading: true,\n        requestUsers: []\n      });\n\n      var users = [];\n      var counter = 0;\n\n      for (var i = 0; i < _this.state.requests.length; i++) {\n        var req = _this.state.requests[i]; // console.log(req)\n\n        _this.props.firebase.user(req).get().then(function (doc) {\n          users.push(doc.data()); // console.log(JSON.stringify(doc.data()));\n\n          _this.setState({\n            requestUsers: users\n          });\n\n          counter++;\n\n          if (counter === _this.state.requests.length) {\n            // console.log(\"done loading\");\n            _this.setState({\n              loading: false\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = (_this$state = {\n      requests: _this.props.requests,\n      requestUsers: [],\n      loading: false,\n      network: _this.props.network,\n      allUsers: [],\n      addedFriend: '',\n      invitedFriend: ''\n    }, _defineProperty(_this$state, \"loading\", false), _defineProperty(_this$state, \"suggestions\", []), _this$state);\n    return _this;\n  }\n\n  _createClass(AddFriend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ref = this.props.firebase.user(this.props.uid);\n      ref.onSnapshot(function (doc) {\n        var data = doc.data();\n\n        _this2.setState({\n          requests: data.requests\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          requestUsers = _this$state2.requestUsers,\n          requests = _this$state2.requests;\n\n      if (requestUsers.length == 0 && requests.length > 0) {\n        if (this.state.loading == false) {\n          this.loadRequestUsers();\n        }\n      }\n\n      var addedFriend = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.state.addedFriend);\n      var invitedFriend = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, this.state.invitedFriend);\n      var req = [];\n\n      var _loop = function _loop() {\n        var uid = requests[i]; // console.log('changing request users in addfriends'  + uid);\n\n        var user = requestUsers[i];\n        addEl = React.createElement(\"div\", {\n          className: \"preview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          PpfURL: user.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, user.name), React.createElement(\"div\", {\n          className: \"yesno\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"yes\",\n          onClick: function onClick() {\n            return _this3.acceptRequest(uid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-check\",\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"no\",\n          onClick: function onClick() {\n            return _this3.removeRequest(uid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-close\",\n          style: {\n            color: '#8A8184'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \" \"))));\n        req.push(addEl);\n      };\n\n      for (var i = 0; i < requestUsers.length; i++) {\n        var addEl;\n\n        _loop();\n      }\n\n      var suggestions = this.state.suggestions.map(function (sug, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          PpfURL: sug.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, sug.name), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.confirmAdd(sug.uid);\n          },\n          className: \"yes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-close\",\n          style: {\n            color: '#8A8184'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        className: \"modal network\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this3.props.setAddFriend(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        src: plant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), req ? React.createElement(\"div\", {\n        className: \"scrolling-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, req) : null, React.createElement(\"div\", {\n        className: \"add-friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"add friend\"), addedFriend, React.createElement(\"div\", {\n        className: \"network-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"add-friend-email\",\n        type: \"email\",\n        placeholder: \"what's their email?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"request\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, suggestions)), React.createElement(\"div\", {\n        className: \"invite-friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"invite friend\"), invitedFriend, React.createElement(\"div\", {\n        className: \"network-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"what's their email?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.inviteFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"invite\"))));\n    }\n  }]);\n\n  return AddFriend;\n}(React.Component);\n\n;\nexport default AddFriend;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/AddFriend.js"],"names":["React","Component","plant","$","Avatar","firebase","AddFriend","props","setAddedFriend","mssg","setState","addedFriend","setInvitedFriend","invitedFriend","validateEmail","email","re","test","String","toLowerCase","genList","ref","search_val","tempSug","get","then","querySnapshot","forEach","doc","console","log","id","data","push","uid","name","url","PpfURL","suggestions","catch","err","confirmAdd","user","update","firestore","FieldValue","arrayUnion","addFriend","val","users","where","inviteFriend","acceptRequest","removeRequest","network","state","feed","set","arrayRemove","requestUsers","i","length","splice","loadRequestUsers","loading","counter","requests","req","allUsers","onSnapshot","addEl","color","map","sug","index","setAddFriend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport plant from '../graphics/icon.png';\nimport $ from 'jquery';\nimport Avatar from './Avatar';\nimport * as firebase from 'firebase';\n\nclass AddFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: this.props.requests,\n      requestUsers: [],\n      loading: false,\n      network: this.props.network,\n      allUsers: [],\n      addedFriend: '',\n      invitedFriend: '',\n      loading: false,\n      suggestions: []\n    };\n  }\n\n\n  componentDidMount() {\n    let ref = this.props.firebase.user(this.props.uid);\n    ref.onSnapshot((doc) => {\n      let data = doc.data();\n      this.setState({\n        requests: data.requests,\n      })\n    })\n  }\n\n  setAddedFriend = (mssg) => {\n    this.setState({\n      addedFriend: mssg\n    });\n  }\n\n  setInvitedFriend = (mssg) => {\n    this.setState({\n      invitedFriend: mssg\n    });\n  }\n  validateEmail = (email) => {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  genList = (ref, search_val) => {\n      let tempSug = [];\n      ref.get()\n      .then(querySnapshot => {\n        // console.log(this.props.uid)\n        /*this.props.firebase.users().doc(querySnapshot.docs[0].id)\n          .update({\n            \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n          });\n        this.setAddedFriend('sent request!');*/\n        querySnapshot.forEach(function(doc) {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            tempSug.push({\n                uid:doc.id,\n                name:doc.data().name,\n                url:doc.data().PpfURL\n            })\n        });\n        this.setState({\n            suggestions:tempSug\n        })\n      })\n      .catch(err => {\n        this.setAddedFriend(\"couldn't find \" + search_val);\n      });\n  }\n  confirmAdd = (uid) => {\n      console.log(\"adding \" + uid);\n      this.props.firebase.user(uid).update({\n            \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n          });\n        this.setAddedFriend('sent request!');\n  }\n  addFriend = () => {\n    // if (this.state.loading === true) return;\n\n    /*let email = \"\";\n    let name = \"\";*/\n    let ref = \"\";\n    let search_val  = $('#add-friend-email').val();\n    if(this.validateEmail(search_val)){\n        //email = $('#add-friend-email').val();\n        ref = this.props.firebase.users().where(\"email\", \"==\", search_val);\n    }\n    else{\n        //name = $('#add-friend-email').val();\n        search_val = search_val.toLowerCase();\n        ref = this.props.firebase.users().where(\"easy_name\", \"==\", search_val);\n    }\n\n    \n    this.genList(ref, search_val);\n    /*ref.get()\n      .then(querySnapshot => {\n        // console.log(this.props.uid)\n        this.props.firebase.users().doc(querySnapshot.docs[0].id)\n          .update({\n            \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n          });\n        this.setAddedFriend('sent request!');\n        \n      })\n      .catch(err => {\n        this.setAddedFriend(\"couldn't find \" + search_val);\n      });*/\n\n\n\n    // if (this.state.allUsers.length == 0){\n\n    // }else{\n    //   this.sendRequest(users[i].uid);\n    // }\n\n    // let users = this.state.users;\n\n    // for (var i = 0; i < users.length; i++) {\n    //   console.log(JSON.stringify(users[i]));\n    //   if (users[i].email == email) {\n    //     //are they your friend?\n    //     let index = users.indexOf(users[i].uid);\n    //     if (index > -1) {\n    //       this.setAddedFriend(\"you're already friends!\");\n    //       return;\n    //     }\n    //     //send request\n\n    //     return;\n    //   }\n    // }\n  };\n\n  inviteFriend = () => {\n    this.setAddedFriend('invited!');\n  };\n\n  acceptRequest = (uid) => {\n    //remove uid from your request\n    this.removeRequest(uid);\n    //insert uid to your network array and their network array\n    //propogate backwards - update networktab's state and app's state\n    let network = this.state.network;\n    network.push(uid);\n\n    this.setState({ network: network });\n\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        network: network\n      });\n\n    this.props.firebase.user(uid)\n      .update({\n        network: firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n      });\n\n\n    //update their feed with your posts; update your feed with their posts\n    this.props.firebase\n      .feed(uid).where('uid', '==', uid).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n\n          this.props.firebase\n            .feed(this.props.uid).doc(doc.id).set(doc.data());\n\n        });\n      });\n\n\n    this.props.firebase\n      .feed(this.props.uid).where('uid', '==', this.props.uid).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n\n          this.props.firebase\n            .feed(uid).doc(doc.id).set(doc.data());\n\n        });\n      });\n  }\n\n  removeRequest = (uid) => {\n    //remove uid from your requests\n\n    // let requestArr = this.state.requests;\n    // let index = requestArr.indexOf(uid);\n    // if (index > -1) {\n    //   requestArr.splice(index, 1);\n    // }\n    // let usersArr = this.state.requestUsers;\n    // for (var i = 0; i < usersArr.length; i++) {\n    //   if (usersArr[i].uid == uid) {\n    //     usersArr.splice(i, 1);\n    //   }\n    // }\n    // this.setState({ requests: requestArr, requestUsers: usersArr });\n    // this.props.firebase\n    //   .user(this.props.uid)\n    //   .update({\n    //     requests: requestArr\n    //   });\n    this.props.firebase.user(this.props.uid).update({\n      \"requests\": firebase.firestore.FieldValue.arrayRemove(uid)\n    }).then(() => {\n      let users = this.state.requestUsers;\n      for (var i = 0; i < users.length; i++) {\n        if (users[i].uid == uid) {\n          users.splice(i, 1);\n          this.setState({ requestUsers: users });\n        }\n      }\n    });\n\n\n  }\n\n  loadRequestUsers = () => {\n    this.setState({ loading: true, requestUsers: [] });\n    let users = [];\n    let counter = 0;\n    for (var i = 0; i < this.state.requests.length; i++) {\n      let req = this.state.requests[i];\n      // console.log(req)\n      this.props.firebase\n        .user(req).get().then((doc) => {\n          users.push(doc.data());\n          // console.log(JSON.stringify(doc.data()));\n          this.setState({ requestUsers: users });\n          counter++;\n          if (counter === this.state.requests.length) {\n            // console.log(\"done loading\");\n            this.setState({ loading: false });\n          }\n        });\n    }\n  }\n\n  render() {\n    let { requestUsers, requests } = this.state;\n\n\n\n    if (requestUsers.length == 0 && requests.length > 0) {\n      if (this.state.loading == false) {\n        this.loadRequestUsers();\n      }\n    }\n\n    let addedFriend = (\n      <p>\n        {this.state.addedFriend}\n      </p>\n    );\n\n    let invitedFriend = (\n      <p>\n        {this.state.invitedFriend}\n      </p>\n    );\n\n    let req = [];\n    for (var i = 0; i < requestUsers.length; i++) {\n\n      let uid = requests[i];\n      // console.log('changing request users in addfriends'  + uid);\n\n      let user = requestUsers[i];\n      var addEl = (\n        <div className=\"preview\">\n          <Avatar PpfURL={user.PpfURL} />\n          <p>{user.name}</p>\n          <div className=\"yesno\">\n            <button className=\"yes\" onClick={() => this.acceptRequest(uid)}>\n              <span className=\"jam jam-check\" style={{ color: 'white' }}></span>\n            </button>\n            <button className=\"no\" onClick={() => this.removeRequest(uid)}>\n              <span className=\"jam jam-close\" style={{ color: '#8A8184' }}> </span>\n            </button>\n          </div>\n        </div>\n      );\n      req.push(addEl);\n    }\n    const suggestions = this.state.suggestions.map((sug, index) =>\n        <div><Avatar PpfURL={sug.url} /><h1>{sug.name}</h1><button onClick={() => this.confirmAdd(sug.uid)} className=\"yes\"><span className=\"jam jam-close\" style={{ color: '#8A8184' }}></span></button></div>\n    );\n    return (\n      <div className=\"modal network\">\n        <button className=\"close\" onClick={() => this.props.setAddFriend(false)}>\n\n\n          <span className=\"jam jam-close\"></span>\n        </button>\n        <img src={plant}></img>\n\n        {req ? <div className=\"scrolling-row\">{req}</div> : null}\n\n        <div className=\"add-friend\">\n          <h2>add friend</h2>\n          {addedFriend}\n          <div className=\"network-input\">\n            <input id=\"add-friend-email\" type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.addFriend}>request</button>\n          </div>\n          <div>\n            {suggestions}\n          </div>\n        </div>\n        <div className=\"invite-friend\">\n          <h2>invite friend</h2>\n          {invitedFriend}\n          <div className=\"network-input\">\n            <input type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.inviteFriend}>invite</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default AddFriend;"]},"metadata":{},"sourceType":"module"}