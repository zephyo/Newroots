{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Misc/Dropdown.js\";\nimport React, { Component } from 'react';\n/*\n\n* List of options\n    option: {\n      icon:\n      text:\n    }\n\n* onChange function\n*/\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n\n    _this.setDropdown = function (bool) {\n      _this.setState({\n        dropdown: bool\n      });\n\n      if (bool == false) {\n        document.removeEventListener('mousedown', _this.handleClickOutside, false);\n      } else {\n        document.addEventListener('mousedown', _this.handleClickOutside, false);\n      }\n    };\n\n    _this.handleClickOutside = function (e) {\n      if (_this.node.contains(e.target)) {\n        return;\n      }\n\n      _this.setDropdown(false);\n    };\n\n    _this.setSelected = function (index) {\n      _this.setState({\n        selected: index\n      });\n    };\n\n    _this.state = {\n      dropdown: false,\n      selected: _this.props.selected ? _this.props.selected : 0\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.selected !== this.state.selected) {\n        this.setState({\n          selected: nextProps.selected\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dropdown = _this$state.dropdown,\n          selected = _this$state.selected;\n      var content;\n\n      if (dropdown) {\n        var options = this.props.options.map(function (item, i) {\n          var icon;\n\n          if (item.icon != null) {\n            icon = React.createElement(\"span\", {\n              className: \"jam checkicon jam-\" + item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            });\n          }\n\n          var chevron = null;\n\n          if (i === 0) {\n            chevron = React.createElement(\"span\", {\n              className: \"jam checkicon jam-chevron-up\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            });\n          }\n\n          return React.createElement(\"li\", {\n            key: 'dropdown_' + i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"dropdown\",\n            onClick: function onClick() {\n              _this2.props.onChange(item.text);\n\n              _this2.setSelected(i);\n\n              _this2.setDropdown(false);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, icon, ' ' + item.text, chevron));\n        });\n        content = options;\n      } else {\n        var icon;\n\n        if (this.props.options[selected].icon != null) {\n          icon = React.createElement(\"span\", {\n            className: \"jam checkicon jam-\" + this.props.options[selected].icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        }\n\n        content = React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"dropdown\",\n          onClick: function onClick() {\n            return _this2.setDropdown(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, icon, ' ' + this.props.options[selected].text, React.createElement(\"span\", {\n          className: \"jam checkicon jam-chevron-down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"ul\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        className: \"dropdown-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nexport default Dropdown;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Misc/Dropdown.js"],"names":["React","Component","Dropdown","props","setDropdown","bool","setState","dropdown","document","removeEventListener","handleClickOutside","addEventListener","e","node","contains","target","setSelected","index","selected","state","nextProps","content","options","map","item","i","icon","chevron","onChange","text"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\n\n\n/*\n\n* List of options\n    option: {\n      icon:\n      text:\n    }\n\n* onChange function\n*/\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdown: false,\n      selected: this.props.selected ? this.props.selected : 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selected !== this.state.selected) {\n      this.setState({ selected: nextProps.selected });\n    }\n  }\n\n  setDropdown = (bool) => {\n    this.setState({ dropdown: bool });\n    if (bool == false) {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    } else {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n  }\n\n  handleClickOutside = (e) => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.setDropdown(false);\n  }\n\n  setSelected = (index) => {\n    this.setState({ selected: index });\n  }\n\n  render() {\n    const { dropdown, selected } = this.state;\n\n    let content;\n\n    if (dropdown) {\n      let options = this.props.options.map((item, i) => {\n        let icon;\n        if (item.icon != null) {\n          icon = <span className={\"jam checkicon jam-\" + item.icon}></span>\n        }\n\n        let chevron = null;\n        if (i === 0) {\n          chevron =\n            <span className=\"jam checkicon jam-chevron-up\"></span>;\n        }\n\n        return (<li key={'dropdown_' + i}>\n          <button className=\"dropdown\" onClick={() => {\n            this.props.onChange(item.text);\n            this.setSelected(i)\n            this.setDropdown(false);\n          }}>\n            {icon}\n            {' ' + item.text}\n            {chevron}\n          </button>\n        </li>)\n      });\n      content = options;\n\n    }\n    else {\n      let icon;\n      if (this.props.options[selected].icon != null) {\n        icon = <span className={\"jam checkicon jam-\" + this.props.options[selected].icon}></span>\n      }\n      content =\n        <li>\n          <button className=\"dropdown\" onClick={() => this.setDropdown(true)}>\n            {icon}\n            {' ' + this.props.options[selected].text}\n            <span className=\"jam checkicon jam-chevron-down\"></span>\n          </button>\n        </li>;\n    }\n\n\n    return (\n      <ul\n        ref={node => this.node = node}\n        className=\"dropdown-container\">\n        {content}\n      </ul>\n    );\n\n  }\n}\n\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}