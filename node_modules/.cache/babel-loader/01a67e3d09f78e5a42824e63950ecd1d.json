{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/ThoughtPost.js\";\nimport React from 'react';\nimport ThoughtStarter from './ThoughtStarter';\nimport ConversationEdit from './ConversationEdit';\nimport Post from './Post';\n/*\n\nprops:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -thought\n  -conversation : array\n*/\n\nvar ThoughtPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ThoughtPost, _React$Component);\n\n  function ThoughtPost(props) {\n    var _this;\n\n    _classCallCheck(this, ThoughtPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThoughtPost).call(this, props));\n\n    _this.Save = function (message) {\n      _this.setEdit(false);\n    };\n\n    _this.setEdit = function (bool) {\n      _this.setState({\n        isEditing: bool\n      });\n    };\n\n    _this.getContent = function () {\n      if (_this.state.isEditing == true) {\n        return React.createElement(ConversationEdit, {\n          PpfURL: _this.props.PpfURL,\n          message: _this.props.thought,\n          Save: _this.Save,\n          Cancel: function Cancel() {\n            return _this.setEdit(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ThoughtStarter, {\n        isMyPost: _this.props.posterUid == _this.props.uid,\n        PpfURL: _this.props.PpfURL,\n        message: _this.props.thought,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      isEditing: false\n    };\n    return _this;\n  }\n\n  _createClass(ThoughtPost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Post, {\n        PpfURL: this.props.PpfURL,\n        yourPpfURL: this.props.yourPpfURL,\n        firebase: this.props.firebase,\n        postid: this.props.postid,\n        uid: this.props.uid,\n        postClass: \"thought\",\n        actionStr: \"updated\",\n        name: this.props.name,\n        timestamp: this.props.timestamp,\n        content: this.getContent(),\n        setEdit: this.setEdit,\n        Save: this.Save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ThoughtPost;\n}(React.Component);\n\nexport default ThoughtPost;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/ThoughtPost.js"],"names":["React","ThoughtStarter","ConversationEdit","Post","ThoughtPost","props","Save","message","setEdit","bool","setState","isEditing","getContent","state","PpfURL","thought","posterUid","uid","yourPpfURL","firebase","postid","name","timestamp","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA;;;;;;;;;;;IAWMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAOnBC,IAPmB,GAOZ,UAACC,OAAD,EAAa;AAClB,YAAKC,OAAL,CAAa,KAAb;AACD,KATkB;;AAAA,UAWnBA,OAXmB,GAWT,UAACC,IAAD,EAAU;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACD,KAbkB;;AAAA,UAenBG,UAfmB,GAeN,YAAM;AACjB,UAAI,MAAKC,KAAL,CAAWF,SAAX,IAAwB,IAA5B,EAAkC;AAChC,eAAO,oBAAC,gBAAD;AACL,UAAA,MAAM,EAAE,MAAKN,KAAL,CAAWS,MADd;AAEL,UAAA,OAAO,EAAE,MAAKT,KAAL,CAAWU,OAFf;AAGL,UAAA,IAAI,EAAE,MAAKT,IAHN;AAIL,UAAA,MAAM,EAAE;AAAA,mBAAI,MAAKE,OAAL,CAAa,KAAb,CAAJ;AAAA,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD;;AAED,aAAO,oBAAC,cAAD;AACL,QAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWW,SAAX,IAAwB,MAAKX,KAAL,CAAWY,GADxC;AAEL,QAAA,MAAM,EAAE,MAAKZ,KAAL,CAAWS,MAFd;AAGL,QAAA,OAAO,EAAE,MAAKT,KAAL,CAAWU,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMD,KA/BkB;;AAEjB,UAAKF,KAAL,GAAa;AACXF,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;6BA4BQ;AACP,aAAO,oBAAC,IAAD;AACL,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWS,MADd;AAEL,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWa,UAFlB;AAGL,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc,QAHhB;AAIL,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe,MAJd;AAKL,QAAA,GAAG,EAAE,KAAKf,KAAL,CAAWY,GALX;AAML,QAAA,SAAS,EAAC,SANL;AAOL,QAAA,SAAS,EAAC,SAPL;AAQL,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWgB,IARZ;AASL,QAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWiB,SATjB;AAUL,QAAA,OAAO,EAAE,KAAKV,UAAL,EAVJ;AAWL,QAAA,OAAO,EAAE,KAAKJ,OAXT;AAYL,QAAA,IAAI,EAAE,KAAKF,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAcD;;;;EAjDuBN,KAAK,CAACuB,S;;AAoDhC,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport ThoughtStarter from './ThoughtStarter';\nimport ConversationEdit from './ConversationEdit';\nimport Post from './Post';\n/*\n\nprops:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -thought\n  -conversation : array\n*/\n\nclass ThoughtPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    }\n  }\n\n  Save = (message) => {\n    this.setEdit(false);\n  }\n\n  setEdit = (bool) => {\n    this.setState({ isEditing: bool })\n  }\n\n  getContent = () => {\n    if (this.state.isEditing == true) {\n      return <ConversationEdit\n        PpfURL={this.props.PpfURL}\n        message={this.props.thought}\n        Save={this.Save}\n        Cancel={()=>this.setEdit(false)}\n      />;\n    }\n\n    return <ThoughtStarter\n      isMyPost={this.props.posterUid == this.props.uid}\n      PpfURL={this.props.PpfURL}\n      message={this.props.thought}\n    />;\n\n  }\n\n  render() {\n    return <Post\n      PpfURL={this.props.PpfURL}\n      yourPpfURL={this.props.yourPpfURL}\n      firebase={this.props.firebase}\n      postid={this.props.postid}\n      uid={this.props.uid}\n      postClass='thought'\n      actionStr='updated'\n      name={this.props.name}\n      timestamp={this.props.timestamp}\n      content={this.getContent()}\n      setEdit={this.setEdit}\n      Save={this.Save}\n    />\n  }\n}\n\nexport default ThoughtPost;\n"]},"metadata":{},"sourceType":"module"}