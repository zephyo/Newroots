{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/User/Settings/Muted.js\";\nimport React from 'react';\nimport UserRow from '../../Network/UserRow';\nimport ListOfUsers from './../../Network/ListOfUsers';\nimport UserPage from '../../Network/UserPage';\nimport Header from '../../Misc/Header';\n/*\nfirebase\nuid\n*/\n\nvar Muted =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Muted, _React$Component);\n\n  function Muted(props) {\n    var _this;\n\n    _classCallCheck(this, Muted);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Muted).call(this, props));\n\n    _this.closeUserPage = function () {\n      return _this.setState({\n        showUser: null\n      });\n    };\n\n    _this.setUser = function (user) {\n      return _this.setState({\n        showUser: user\n      });\n    };\n\n    _this.setUnmuteUser = function (uid) {\n      var newUnmuted = _this.state.unmutedUsers;\n\n      if (uid in newUnmuted) {\n        delete newUnmuted[uid];\n      } else {\n        newUnmuted[uid] = true;\n      }\n\n      _this.setState({\n        unmutedUsers: newUnmuted\n      });\n    };\n\n    _this.goBack = function () {\n      for (var key in _this.state.unmutedUsers) {\n        _this.props.firebase.user(_this.props.uid).update({\n          \"muteList\": _this.props.firebase.arrayRemove(key)\n        }).then(function () {});\n      }\n\n      _this.props.returnHome();\n    };\n\n    _this.renderUser = function (user) {\n      return React.createElement(UserRow, {\n        onProfileClick: function onProfileClick() {\n          return _this.setUser(user);\n        },\n        PpfURL: user.PpfURL,\n        name: user.name,\n        rightElement: React.createElement(\"button\", {\n          className: user.uid in _this.state.unmutedUsers ? 'unmute' : '',\n          onClick: function onClick() {\n            return _this.setUnmuteUser(user.uid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-volume-mute\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      showUser: null,\n      unmutedUsers: {}\n    };\n    return _this;\n  }\n\n  _createClass(Muted, [{\n    key: \"render\",\n    value: function render() {\n      var userPage = null;\n\n      if (this.state.showUser != null) {\n        var showUser = this.state.showUser;\n        userPage = React.createElement(UserPage, {\n          closeUserPage: this.closeUserPage,\n          PpfURL: showUser.PpfURL,\n          name: showUser.name,\n          bio: showUser.bio,\n          location: showUser.location,\n          pronouns: showUser.pronouns,\n          checkins: showUser.checkinData,\n          network: showUser.network,\n          myUID: this.props.uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"section\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Header, {\n        goBack: this.goBack,\n        title: \"Muted accounts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ListOfUsers, {\n        containerClass: \"friends\",\n        firebase: this.props.firebase,\n        uid: this.props.uid,\n        key: \"muteList\",\n        renderFunc: this.renderUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), userPage));\n    }\n  }]);\n\n  return Muted;\n}(React.Component);\n\nexport default Muted;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/User/Settings/Muted.js"],"names":["React","UserRow","ListOfUsers","UserPage","Header","Muted","props","closeUserPage","setState","showUser","setUser","user","setUnmuteUser","uid","newUnmuted","state","unmutedUsers","goBack","key","firebase","update","arrayRemove","then","returnHome","renderUser","PpfURL","name","userPage","bio","location","pronouns","checkinData","network","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport UserRow from '../../Network/UserRow'\nimport ListOfUsers from './../../Network/ListOfUsers';\nimport UserPage from '../../Network/UserPage' \nimport Header from '../../Misc/Header'\n/*\nfirebase\nuid\n*/\n\nclass Muted extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: null,\n      unmutedUsers: {}\n    }\n  }\n\n  closeUserPage = () => this.setState({ showUser: null })\n\n  setUser = (user) => this.setState({ showUser: user })\n\n  setUnmuteUser = (uid) => {\n    let newUnmuted = this.state.unmutedUsers;\n\n    if (uid in newUnmuted) {\n      delete newUnmuted[uid];\n    } else {\n      newUnmuted[uid] = true;\n    }\n\n    this.setState({ unmutedUsers: newUnmuted })\n  }\n\n  goBack = () => {\n    for (let key in this.state.unmutedUsers) {\n      this.props.firebase.user(this.props.uid).update({\n        \"muteList\": this.props.firebase.arrayRemove(key)\n      }).then(() => {\n      });\n    }\n    this.props.returnHome();\n  }\n\n  renderUser = (user) =>  \n    <UserRow\n      onProfileClick={() => this.setUser(user)}\n      PpfURL={user.PpfURL}\n      name={user.name}\n      rightElement={\n        <button\n          className={(user.uid in this.state.unmutedUsers) ? 'unmute' : ''}\n          onClick={() => this.setUnmuteUser(user.uid)}>\n          <span className=\"jam jam-volume-mute\" ></span>\n        </button>}\n    />;\n\n  render() {\n    let userPage = null;\n\n    if (this.state.showUser != null) {\n      const showUser = this.state.showUser;\n      userPage = <UserPage\n        closeUserPage={this.closeUserPage}\n        PpfURL={showUser.PpfURL}\n        name={showUser.name}\n        bio={showUser.bio}\n        location={showUser.location}\n        pronouns={showUser.pronouns}\n        checkins={showUser.checkinData}\n        network={showUser.network}\n        myUID={this.props.uid}\n      ></UserPage>\n    }\n\n    return (\n      <section className=\"user\">\n        <Header\n          goBack={this.goBack}\n          title='Muted accounts'\n        />\n        <div className=\"content\">\n          <ListOfUsers\n            containerClass='friends'\n            firebase={this.props.firebase}\n            uid={this.props.uid}\n            key='muteList'\n            renderFunc={this.renderUser}\n          />\n          {userPage}\n        </div>\n      </section>\n\n    );\n  }\n}\n\n\nexport default Muted;"]},"metadata":{},"sourceType":"module"}