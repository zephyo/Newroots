{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/FeedTab.js\";\nimport React from 'react';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\nimport moment from 'moment';\nimport ThoughtInput from './ThoughtInput';\nimport ThoughtProvoker from './ThoughtProvoker';\nimport graphics1 from '../../graphics/1.png';\nimport ErrorMsg from '../Misc/ErrorMsg';\nimport Loading from '../Misc/Loading';\nimport StaticUtil from '../../data/StaticUtil';\nimport StaticDataModel from '../../data/StaticDataModel';\nvar feedListen;\nvar initial = true;\n\nvar FeedTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedTab, _React$Component);\n\n  function FeedTab(props) {\n    var _this;\n\n    _classCallCheck(this, FeedTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedTab).call(this, props));\n\n    _this.getTime = function (time) {\n      return moment(time).format('lll');\n    };\n\n    _this.setLastSeen = function (lastSeen) {\n      return _this.setState(lastSeen);\n    };\n\n    _this.getDataObj = function (docid, data) {\n      if (data.checkin) {\n        return StaticDataModel.getCheckinObject(docid, data, _this.getTime(data.timestamp));\n      }\n\n      return StaticDataModel.getThoughtObject(docid, data, _this.getTime(data.timestamp));\n    };\n\n    _this.loadMore = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var first = _this.props.firebase.feed(_this.props.uid).orderBy(\"realtime\", \"desc\").limit(20);\n\n      if (!initial) {\n        first = first.startAfter(_this.state.lastSeen);\n      }\n\n      var tempFeed = [];\n      first.get().then(function (documentSnapshots) {\n        if (documentSnapshots.docs[documentSnapshots.docs.length - 1]) {\n          _this.setLastSeen(documentSnapshots.docs[documentSnapshots.docs.length - 1]);\n        }\n\n        documentSnapshots.forEach(function (doc) {\n          tempFeed.push(_this.getDataObj(doc.id, doc.data()));\n        });\n\n        _this.setState({\n          feed: _this.state.feed.concat(tempFeed),\n          loading: false\n        });\n\n        initial = false;\n      });\n    };\n\n    _this.componentDidMount = function () {\n      initial = true;\n      currFeed = _this.state.feed;\n      feedListen = _this.props.firebase.feed(_this.props.uid).onSnapshot(function (snapshot) {\n        if (initial) return;\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === \"added\") {\n            tempFeed.push(_this.getDataObj(change.doc.id, change.doc.data()));\n          } else if (change.type === \"modified\") {\n            var index = currFeed.map(function (e) {\n              return e.postid;\n            }).indexOf(change.doc.id);\n            currFeed[index] = _this.getDataObj(change.doc.id, change.doc.data());\n          } else if (change.type === \"removed\") {\n            var _index = currFeed.map(function (e) {\n              return e.postid;\n            }).indexOf(change.doc.id);\n\n            currFeed.splice(_index, 1);\n          }\n        });\n        tempFeed.sort(StaticUtil.compareTimestamps);\n        tempFeed.reverse();\n\n        _this.setState({\n          feed: currFeed,\n          newItems: tempFeed\n        });\n      });\n\n      if (initial) {\n        _this.loadMore();\n      }\n    };\n\n    _this.state = {\n      thoughts: [],\n      checkins: [],\n      feed: [],\n      newItems: [],\n      lastSeen: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(FeedTab, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.loadMore === true) {\n        this.loadMore(false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      feedListen();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var local_feed = this.state.newItems.concat(this.state.feed);\n      var last_date = null;\n      var feedItems = [];\n\n      for (var index = 0; index < local_feed.length; index++) {\n        var post = local_feed[index];\n\n        if (post.timestamp.split(\",\")[0] !== last_date) {\n          last_date = post.timestamp.split(\",\")[0];\n          feedItems.push(React.createElement(\"h1\", {\n            className: \"date-marker\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, last_date));\n        }\n\n        if (post.checkinData) {\n          feedItems.push(React.createElement(CheckinPost, {\n            uid: this.props.uid,\n            yourNetwork: this.props.network,\n            posterUid: post.uid,\n            PpfURL: post.PpfURL,\n            yourPpfURL: this.props.PpfURL,\n            key: index.toString() + \"_checkin\",\n            name: post.name,\n            timestamp: post.timestamp,\n            postid: post.postid,\n            checkinData: post.checkinData,\n            firebase: this.props.firebase,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }));\n        } else {\n          feedItems.push(React.createElement(ThoughtPost, {\n            uid: this.props.uid,\n            yourNetwork: this.props.network,\n            posterUid: post.uid,\n            PpfURL: post.PpfURL,\n            yourPpfURL: this.props.PpfURL,\n            key: index.toString() + \"_thought\",\n            name: post.name,\n            thought: post.thought,\n            timestamp: post.timestamp,\n            message: post.message,\n            postid: post.postid,\n            firebase: this.props.firebase,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }));\n        }\n      }\n\n      var loadingEl = null;\n\n      if (this.state.loading) {\n        loadingEl = React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      } else {\n        loadingEl = React.createElement(ErrorMsg, {\n          src: graphics1,\n          header: \"Nothing more.\",\n          msg: \"Why not post a thought?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"section\", {\n        className: \"feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(ThoughtProvoker, {\n        name: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(ThoughtInput, {\n        PpfURL: this.props.PpfURL,\n        name: this.props.name,\n        uid: this.props.uid,\n        network: this.props.network,\n        firebase: this.props.firebase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), feedItems, loadingEl);\n    }\n  }]);\n\n  return FeedTab;\n}(React.Component);\n\nexport default FeedTab;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/FeedTab.js"],"names":["React","CheckinPost","ThoughtPost","moment","ThoughtInput","ThoughtProvoker","graphics1","ErrorMsg","Loading","StaticUtil","StaticDataModel","feedListen","initial","FeedTab","props","getTime","time","format","setLastSeen","lastSeen","setState","getDataObj","docid","data","checkin","getCheckinObject","timestamp","getThoughtObject","loadMore","loading","first","firebase","feed","uid","orderBy","limit","startAfter","state","tempFeed","get","then","documentSnapshots","docs","length","forEach","doc","push","id","concat","componentDidMount","currFeed","onSnapshot","snapshot","docChanges","change","type","index","map","e","postid","indexOf","splice","sort","compareTimestamps","reverse","newItems","thoughts","checkins","nextProps","local_feed","last_date","feedItems","post","split","checkinData","network","PpfURL","toString","name","thought","message","loadingEl","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\nimport moment from 'moment';\nimport ThoughtInput from './ThoughtInput';\nimport ThoughtProvoker from './ThoughtProvoker';\n\nimport graphics1 from '../../graphics/1.png';\nimport ErrorMsg from '../Misc/ErrorMsg';\nimport Loading from '../Misc/Loading';\n\nimport StaticUtil from '../../data/StaticUtil'\nimport StaticDataModel from '../../data/StaticDataModel'\n\nlet feedListen;\nlet initial = true;\n\nclass FeedTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thoughts: [],\n      checkins: [],\n      feed: [],\n      newItems: [],\n      lastSeen: '',\n      loading: false,\n    }\n  }\n\n  getTime = (time) => moment(time).format('lll')\n\n  setLastSeen = (lastSeen) => this.setState(lastSeen)\n\n  getDataObj = (docid, data) => {\n    if (data.checkin) {\n      return StaticDataModel.getCheckinObject(docid, data, this.getTime(data.timestamp))\n    }\n    return StaticDataModel.getThoughtObject(docid, data, this.getTime(data.timestamp))\n  }\n\n  loadMore = () => {\n    this.setState({ loading: true });\n\n    let first = this.props.firebase.feed(this.props.uid)\n      .orderBy(\"realtime\", \"desc\")\n      .limit(20);\n\n    if (!initial) {\n      first = first.startAfter(this.state.lastSeen);\n    }\n\n    let tempFeed = [];\n    first.get().then((documentSnapshots) => {\n      if (documentSnapshots.docs[documentSnapshots.docs.length - 1]) {\n        this.setLastSeen(documentSnapshots.docs[documentSnapshots.docs.length - 1])\n      }\n      documentSnapshots.forEach((doc) => {\n        tempFeed.push(this.getDataObj(doc.id, doc.data()))\n      });\n\n      this.setState({\n        feed: this.state.feed.concat(tempFeed),\n        loading: false\n      })\n\n      initial = false;\n    })\n  }\n\n  componentDidMount = () => {\n    initial = true;\n    currFeed = this.state.feed;\n\n    feedListen = this.props.firebase.feed(this.props.uid)\n      .onSnapshot((snapshot) => {\n        if (initial) return;\n\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            tempFeed.push(this.getDataObj(change.doc.id, change.doc.data()))\n          }\n          else if (change.type === \"modified\") {\n            let index = currFeed.map(function (e) { return e.postid; }).indexOf(change.doc.id);\n            currFeed[index] = this.getDataObj(change.doc.id, change.doc.data())\n          }\n          else if (change.type === \"removed\") {\n            let index = currFeed.map(function (e) { return e.postid; }).indexOf(change.doc.id);\n            currFeed.splice(index, 1);\n          }\n        });\n\n        tempFeed.sort(StaticUtil.compareTimestamps);\n        tempFeed.reverse();\n        this.setState({\n          feed: currFeed,\n          newItems: tempFeed\n        })\n      });\n\n    if (initial) {\n      this.loadMore();\n    }\n  }\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.loadMore === true) {\n      this.loadMore(false);\n    }\n  }\n\n  componentWillUnmount() {\n    feedListen();\n  }\n\n  render() {\n    let local_feed = (this.state.newItems.concat(this.state.feed));\n\n    let last_date = null;\n    let feedItems = [];\n\n    for (let index = 0; index < local_feed.length; index++) {\n      let post = local_feed[index];\n      if (post.timestamp.split(\",\")[0] !== last_date) {\n        last_date = post.timestamp.split(\",\")[0];\n        feedItems.push(<h1 className=\"date-marker\">{last_date}</h1>);\n      }\n      if (post.checkinData) {\n        feedItems.push(\n          <CheckinPost\n            uid={this.props.uid}\n            yourNetwork={this.props.network}\n            posterUid={post.uid}\n\n            PpfURL={post.PpfURL}\n            yourPpfURL={this.props.PpfURL}\n            key={index.toString() + \"_checkin\"}\n            name={post.name}\n            timestamp={post.timestamp}\n\n            postid={post.postid}\n            checkinData={post.checkinData}\n            firebase={this.props.firebase}\n          />);\n      } else {\n        feedItems.push(\n          <ThoughtPost\n            uid={this.props.uid}\n            yourNetwork={this.props.network}\n            posterUid={post.uid}\n\n            PpfURL={post.PpfURL}\n            yourPpfURL={this.props.PpfURL}\n\n            key={index.toString() + \"_thought\"}\n            name={post.name}\n            thought={post.thought}\n            timestamp={post.timestamp}\n\n            message={post.message}\n            postid={post.postid}\n            firebase={this.props.firebase\n            } />);\n      }\n    }\n\n\n    let loadingEl = null;\n    if (this.state.loading) {\n      loadingEl = <Loading />;\n    } else {\n      loadingEl = <ErrorMsg\n        src={graphics1}\n        header='Nothing more.'\n        msg='Why not post a thought?'\n      />;\n    }\n\n    return (\n\n      <section className=\"feed\">\n\n        <ThoughtProvoker\n          name={this.props.name}\n        />\n\n        <ThoughtInput\n          PpfURL={this.props.PpfURL}\n          name={this.props.name}\n          uid={this.props.uid}\n          network={this.props.network}\n          firebase={this.props.firebase}\n        />\n\n        {feedItems}\n\n        {loadingEl}\n\n      </section>\n    );\n  }\n}\n\nexport default FeedTab;"]},"metadata":{},"sourceType":"module"}