{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/EditButton.js\";\nimport React from 'react';\n/*\n  modalOptions: [\n    {\n      text: 'Edit',\n      onClick: this.?,\n      class: 'green'\n    },\n    ...\n  ]\n*/\n//edit / delete\n//report / mute\n\nvar EditButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditButton, _React$Component);\n\n  function EditButton(props) {\n    var _this;\n\n    _classCallCheck(this, EditButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditButton).call(this, props));\n\n    _this.setModal = function (bool) {\n      _this.setState({\n        showModal: bool\n      });\n\n      if (bool == false) {\n        document.removeEventListener('mousedown', _this.handleClickOutside, false);\n      } else {\n        document.addEventListener('mousedown', _this.handleClickOutside, false);\n      }\n    };\n\n    _this.handleClickOutside = function (e) {\n      if (_this.node.contains(e.target)) {\n        return;\n      }\n\n      _this.setModal(false);\n    };\n\n    _this.state = {\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(EditButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modal = null;\n\n      if (this.state.showModal) {\n        var opts = this.props.modalOptions.map(function (item, index) {\n          return React.createElement(\"button\", {\n            className: item.class,\n            onClick: function onClick() {\n              item.onClick();\n\n              _this2.setModal(false);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, item.text);\n        });\n        modal = React.createElement(\"div\", {\n          className: \"post-modal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, opts);\n      }\n\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"user-filter\",\n        onClick: function onClick() {\n          return _this2.setModal(!_this2.state.showModal);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-more-horizontal-f\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), modal);\n    }\n  }]);\n\n  return EditButton;\n}(React.Component);\n\nexport default EditButton;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/EditButton.js"],"names":["React","EditButton","props","setModal","bool","setState","showModal","document","removeEventListener","handleClickOutside","addEventListener","e","node","contains","target","state","modal","opts","modalOptions","map","item","index","class","onClick","text","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;AAWA;AAEA;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,UAACC,IAAD,EAAU;AACnB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd;;AACA,UAAIA,IAAI,IAAI,KAAZ,EAAmB;AACjBG,QAAAA,QAAQ,CAACC,mBAAT,CAA6B,WAA7B,EAA0C,MAAKC,kBAA/C,EAAmE,KAAnE;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,MAAKD,kBAA5C,EAAgE,KAAhE;AACD;AACF,KAdkB;;AAAA,UAgBnBA,kBAhBmB,GAgBE,UAACE,CAAD,EAAO;AAC1B,UAAI,MAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAChC;AACD;;AAED,YAAKX,QAAL,CAAc,KAAd;AACD,KAtBkB;;AAEjB,UAAKY,KAAL,GAAa;AACXT,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;6BAoBQ;AAAA;;AACP,UAAIU,KAAK,GAAG,IAAZ;;AAEA,UAAI,KAAKD,KAAL,CAAWT,SAAf,EAA0B;AACxB,YAAIW,IAAI,GAAG,KAAKf,KAAL,CAAWgB,YAAX,CAAwBC,GAAxB,CAA4B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtD,iBAAO;AACL,YAAA,SAAS,EAAED,IAAI,CAACE,KADX;AAEL,YAAA,OAAO,EAAE,mBAAM;AACbF,cAAAA,IAAI,CAACG,OAAL;;AACA,cAAA,MAAI,CAACpB,QAAL,CAAc,KAAd;AACD,aALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOJiB,IAAI,CAACI,IAPD,CAAP;AAUD,SAXU,CAAX;AAaAR,QAAAA,KAAK,GAAG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BC,IAA7B,CAAR;AACD;;AAED,aACE;AACE,QAAA,GAAG,EAAE,aAAAL,IAAI;AAAA,iBAAI,MAAI,CAACA,IAAL,GAAYA,IAAhB;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACT,QAAL,CAAc,CAAC,MAAI,CAACY,KAAL,CAAWT,SAA1B,CAAN;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAMGU,KANH,CADF;AAUD;;;;EAxDsBhB,KAAK,CAACyB,S;;AA4D/B,eAAexB,UAAf","sourcesContent":["import React from 'react';\n\n/*\n  modalOptions: [\n    {\n      text: 'Edit',\n      onClick: this.?,\n      class: 'green'\n    },\n    ...\n  ]\n*/\n\n//edit / delete\n\n//report / mute\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    }\n  }\n\n  setModal = (bool) => {\n    this.setState({ showModal: bool })\n    if (bool == false) {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    } else {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n  }\n\n  handleClickOutside = (e) => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.setModal(false);\n  }\n\n\n  render() {\n    let modal = null;\n\n    if (this.state.showModal) {\n      let opts = this.props.modalOptions.map((item, index) => {\n        return <button\n          className={item.class}\n          onClick={() => {\n            item.onClick();\n            this.setModal(false);\n          }}\n        >\n          {item.text}\n        </button>\n\n      });\n\n      modal = <div className='post-modal'>{opts}</div>;\n    }\n\n    return (\n      <div\n        ref={node => this.node = node}\n      >\n        <button className=\"user-filter\" onClick={() => this.setModal(!this.state.showModal)}>\n          <span className=\"jam jam-more-horizontal-f\" ></span>\n        </button>\n        {modal}\n      </div>\n    );\n  }\n}\n\n\nexport default EditButton;\n"]},"metadata":{},"sourceType":"module"}