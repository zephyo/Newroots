{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Misc/UploadProfilePicture.js\";\nimport React from 'react';\nimport Avatar from './Avatar';\n\nvar UploadProfilePicture =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadProfilePicture, _React$Component);\n\n  function UploadProfilePicture(props) {\n    var _this;\n\n    _classCallCheck(this, UploadProfilePicture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadProfilePicture).call(this, props));\n\n    _this.uploadPpf = function (event) {\n      var firstFile = event.target.files[0]; // upload the first file only\n\n      var task = _this.props.firebase.photos(_this.props.uid).put(firstFile);\n\n      task.on('state_changed', function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      }, function (error) {}, function () {\n        // Handle successful uploads on complete\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          _this.props.firebase.user(_this.props.uid).update({\n            PpfURL: downloadURL\n          });\n\n          _this.props.uploadPpf(downloadURL);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadProfilePicture, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        id: \"ppf-upload\",\n        onChange: this.uploadPpf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"edit-pic\",\n        htmlFor: \"ppf-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        PpfURL: this.props.PpfURL,\n        content: React.createElement(\"div\", {\n          className: \"edit-pic-but\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-pencil\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UploadProfilePicture;\n}(React.Component);\n\nexport default UploadProfilePicture;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Misc/UploadProfilePicture.js"],"names":["React","Avatar","UploadProfilePicture","props","uploadPpf","event","firstFile","target","files","task","firebase","photos","uid","put","on","snapshot","progress","bytesTransferred","totalBytes","error","ref","getDownloadURL","then","downloadURL","user","update","PpfURL","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,oB;;;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;;AADiB,UAInBC,SAJmB,GAIP,UAACC,KAAD,EAAW;AACrB,UAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB,CADqB,CACiB;;AACtC,UAAIC,IAAI,GAAG,MAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2B,MAAKR,KAAL,CAAWS,GAAtC,EAA2CC,GAA3C,CAA+CP,SAA/C,CAAX;;AAEAG,MAAAA,IAAI,CAACK,EAAL,CAAQ,eAAR,EAAyB,UAACC,QAAD,EAAc;AACrC,YAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE;AACD,OAFD,EAEG,UAACC,KAAD,EAAW,CAAG,CAFjB,EAEmB,YAAM;AACvB;AACAV,QAAAA,IAAI,CAACM,QAAL,CAAcK,GAAd,CAAkBC,cAAlB,GAAmCC,IAAnC,CAAwC,UAACC,WAAD,EAAiB;AAEvD,gBAAKpB,KAAL,CAAWO,QAAX,CACGc,IADH,CACQ,MAAKrB,KAAL,CAAWS,GADnB,EAEGa,MAFH,CAEU;AACNC,YAAAA,MAAM,EAAEH;AADF,WAFV;;AAMA,gBAAKpB,KAAL,CAAWC,SAAX,CAAqBmB,WAArB;AACD,SATD;AAUD,OAdD;AAeD,KAvBkB;;AAAA;AAElB;;;;6BAuBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,SAA1B;AAAoC,QAAA,EAAE,EAAC,YAAvC;AAAoD,QAAA,QAAQ,EAAE,KAAKnB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWuB,MAA3B;AACE,QAAA,OAAO,EACL;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAcD;;;;EAzCgC1B,KAAK,CAAC2B,S;;AA4CzC,eAAezB,oBAAf","sourcesContent":["import React from 'react';\nimport Avatar from './Avatar';\n\nclass UploadProfilePicture extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  uploadPpf = (event) => {\n    let firstFile = event.target.files[0] // upload the first file only\n    let task = this.props.firebase.photos(this.props.uid).put(firstFile);\n\n    task.on('state_changed', (snapshot) => {\n      let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    }, (error) => { }, () => {\n      // Handle successful uploads on complete\n      task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            PpfURL: downloadURL\n          });\n\n        this.props.uploadPpf(downloadURL);\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"file\" accept=\"image/*\" id=\"ppf-upload\" onChange={this.uploadPpf} />\n        <label className=\"edit-pic\" htmlFor=\"ppf-upload\">\n          <Avatar PpfURL={this.props.PpfURL}\n            content={\n              <div className=\"edit-pic-but\">\n                <span className=\"jam jam-pencil\"></span>\n              </div>\n            }\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default UploadProfilePicture;"]},"metadata":{},"sourceType":"module"}