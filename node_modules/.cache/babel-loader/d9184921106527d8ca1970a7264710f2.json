{"ast":null,"code":"import _defineProperty from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/UserTab.js\";\nimport React, { Component } from 'react';\nimport AddCheckin from './Network/AddCheckin';\nimport $ from 'jquery';\nimport { withFirebase } from './Firebase';\nimport Avatar from './Misc/Avatar';\nimport CheckInRow from './Network/CheckinRow';\nimport Dropdown from './Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../data/StaticUserData';\n\nvar LogoutButton = function LogoutButton(props) {\n  return React.createElement(\"button\", {\n    id: \"logout-but\",\n    onClick: function onClick() {\n      props.logout();\n      props.firebase.doSignOut();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Logout\");\n};\n\nvar LogoutButtonFB = withFirebase(LogoutButton);\n\nvar UserTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserTab, _React$Component);\n\n  function UserTab(props) {\n    var _this;\n\n    _classCallCheck(this, UserTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTab).call(this, props));\n\n    _this.setEditMode = function (bool) {\n      _this.setState({\n        editMode: bool\n      }); //TODO: save changes\n\n\n      if (bool === false) {\n        if (_this.state.madeChanges == true) {\n          var _this$state = _this.state,\n              name = _this$state.name,\n              bio = _this$state.bio,\n              location = _this$state.location,\n              pronouns = _this$state.pronouns;\n\n          _this.props.setUserInfo(name, bio, location, pronouns);\n\n          _this.props.firebase.user(_this.props.uid).update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: _this.state.checkinFreq\n          });\n\n          _this.setMadeChanges(false);\n        }\n      }\n    };\n\n    _this.setMadeChanges = function (bool) {\n      _this.setState({\n        madeChanges: bool\n      });\n    };\n\n    _this.setAddMode = function (bool) {\n      _this.setState({\n        addMode: bool\n      });\n    };\n\n    _this.addCheckin = function (obj) {\n      var arr = _this.state.checkins;\n      arr.push(obj);\n\n      _this.setState({\n        checkins: arr\n      });\n\n      _this.props.setCheckins(arr);\n\n      _this.props.firebase.user(_this.props.uid).update({\n        checkins: arr\n      });\n    };\n\n    _this.removeCheckinAt = function (index) {\n      var arr = _this.state.checkins;\n      arr.splice(index, 1);\n\n      _this.setState({\n        checkins: arr\n      });\n\n      _this.props.setCheckins(arr);\n\n      _this.props.firebase.user(_this.props.uid).update({\n        checkins: arr\n      });\n    };\n\n    _this.uploadPpf = function (event) {\n      var firstFile = event.target.files[0]; // upload the first file only\n\n      var task = _this.props.firebase.photos(_this.props.uid).put(firstFile);\n\n      task.on('state_changed', function (snapshot) {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      }, function (error) {// Handle unsuccessful uploads\n      }, function () {\n        // Handle successful uploads on complete\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          _this.props.firebase.user(_this.props.uid).update({\n            PpfURL: downloadURL\n          });\n\n          _this.setState({\n            PpfURL: downloadURL\n          });\n\n          _this.props.setPpfURL(downloadURL);\n        });\n      });\n    };\n\n    _this.onChangeUserInfo = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.setPronouns = function (pronoun) {\n      if (pronoun == StaticUserData.NULL_KEY) {\n        _this.setState({\n          pronouns: null\n        });\n\n        return;\n      }\n\n      _this.setState({\n        pronouns: pronoun\n      });\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.setCheckinFreq = function (triggeredIndex) {\n      var tempFreq = _this.state.checkinFreq;\n      tempFreq[triggeredIndex] = !tempFreq[triggeredIndex];\n\n      _this.setState({\n        checkinFreq: tempFreq\n      });\n\n      _this.setMadeChanges(true);\n    };\n\n    _this.state = {\n      editMode: false,\n      checkins: _this.props.checkins,\n      name: _this.props.name,\n      bio: _this.props.bio,\n      location: _this.props.location,\n      pronouns: _this.props.pronouns,\n      checkinFreq: _this.props.checkinFreq,\n      addMode: false,\n      PpfURL: _this.props.PpfURL,\n      madeChanges: false\n    };\n    return _this;\n  }\n\n  _createClass(UserTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pronouns = this.state.pronouns;\n      var cornerButton, pic, name, bioEl, locationEl, pronounsEl, checkins, addQ, freq;\n\n      if (this.state.editMode) {\n        cornerButton = React.createElement(\"button\", {\n          className: \"edit done\",\n          onClick: function onClick() {\n            return _this2.setEditMode(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Done\");\n        pic = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          id: \"ppf-upload\",\n          onChange: this.uploadPpf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"edit-pic\",\n          htmlFor: \"ppf-upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          PpfURL: this.state.PpfURL,\n          content: React.createElement(\"div\", {\n            className: \"edit-pic-but\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam jam-pencil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })));\n        name = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Full name\"), React.createElement(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          className: \"profile-name\",\n          placeholder: \"Full name\",\n          onChange: this.onChangeUserInfo,\n          value: this.state.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }));\n        bioEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"About me\"), React.createElement(\"textarea\", {\n          name: \"bio\",\n          rows: \"2\",\n          className: \"profile-bio\",\n          placeholder: \"Write about yourself.\",\n          value: this.state.bio,\n          onChange: this.onChangeUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }));\n        locationEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"Location\"), React.createElement(\"input\", {\n          name: \"location\",\n          type: \"text\",\n          className: \"profile-location\",\n          placeholder: \"Where are you?\",\n          onChange: this.onChangeUserInfo,\n          value: this.state.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }));\n        pronounsEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"Pronouns\"), React.createElement(Dropdown, {\n          options: [StaticUserData.allPronouns[StaticUserData.NULL_KEY], StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]],\n          onChange: this.setPronouns,\n          selected: StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }));\n        var freqButtons = StaticUserData.getDaysOfWeek().map(function (item, index) {\n          var className = \"\";\n\n          if (_this2.state.checkinFreq[index] == false) {\n            className = \"disable\";\n          }\n\n          return React.createElement(\"button\", {\n            key: 'freq_' + index,\n            className: className,\n            onClick: function onClick() {\n              return _this2.setCheckinFreq(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, item);\n        });\n        freq = React.createElement(\"div\", {\n          className: \"freq-days\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, freqButtons);\n      } else {\n        cornerButton = React.createElement(\"button\", {\n          className: \"edit\",\n          onClick: function onClick() {\n            return _this2.setEditMode(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-pencil\",\n          style: {\n            color: '#9FC6C1'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }));\n        pic = React.createElement(Avatar, {\n          PpfURL: this.state.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        });\n        name = React.createElement(\"div\", {\n          className: \"profile-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, this.state.name);\n\n        if (this.state.bio != null) {\n          bioEl = React.createElement(\"p\", {\n            className: \"profile-bio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }, this.state.bio ? this.state.bio : null);\n        } else {\n          bioEl = null;\n        }\n\n        if (this.state.location != null) {\n          locationEl = React.createElement(\"div\", {\n            className: \"profile-location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-map-marker\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309\n            },\n            __self: this\n          }), this.state.location);\n        } else {\n          locationEl = null;\n        }\n\n        if (pronouns != null) {\n          pronounsEl = React.createElement(\"div\", {\n            className: \"profile-pronouns\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }), ' ' + pronouns);\n        } else {\n          pronounsEl = null;\n        }\n\n        var _freqButtons = StaticUserData.getDaysOfWeek().map(function (item, index) {\n          var className = \"\";\n\n          if (_this2.state.checkinFreq != null && _this2.state.checkinFreq[index] == false) {\n            className = \"disable\";\n          }\n\n          return React.createElement(\"div\", {\n            key: 'freq_' + index,\n            className: className,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, item);\n        });\n\n        freq = React.createElement(\"div\", {\n          className: \"freq-days\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, _freqButtons);\n      }\n\n      if (this.state.addMode) {\n        addQ = React.createElement(AddCheckin, {\n          setAddMode: this.setAddMode,\n          uid: this.props.uid,\n          addCheckin: this.addCheckin,\n          categories: this.props.checkinCategories,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        });\n      } else {\n        addQ = React.createElement(\"button\", {\n          className: \"add-checkin\",\n          onClick: function onClick() {\n            _this2.setAddMode(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, \"Add check-in\");\n      }\n\n      checkins = {};\n\n      for (var i = 0; i < this.state.checkins.length; i++) {\n        var checkin = this.state.checkins[i];\n        console.log(checkin.text + ' .. category: ' + checkin.category);\n\n        if (checkin.category == null || checkin.category == '') {\n          checkin.category = StaticUserData.getMiscCategory();\n        }\n\n        if (!(checkin.category in checkins)) {\n          checkins[checkin.category] = [];\n        }\n\n        checkins[checkin.category].push(React.createElement(CheckInRow, {\n          checkin: checkin,\n          removeCheckinAt: this.removeCheckinAt,\n          index: i,\n          trash: this.state.editMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }));\n      }\n\n      var checkinsEl = [];\n\n      for (var category in checkins) {\n        var el = React.createElement(\"div\", {\n          className: \"qcat \" + category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, category), React.createElement(\"ul\", {\n          className: \"your-checkins\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, checkins[category]));\n\n        if (category == StaticUserData.getMiscCategory()) {\n          console.log(category + ' is misc ');\n          checkinsEl.push(el);\n        } else {\n          checkinsEl.unshift(el);\n        }\n      } // console.log(JSON.stringify(checkinsEl));\n\n\n      var style = {};\n\n      if (this.state.editMode) {\n        style = {\n          display: 'contents'\n        };\n      }\n\n      return React.createElement(\"section\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, cornerButton, pic, name, bioEl, React.createElement(\"div\", {\n        className: \"profile-footer\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, locationEl, pronounsEl), React.createElement(\"div\", {\n        className: \"check-in-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"Your check-in\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Check-in frequency\"), freq, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"Check-in questions\"), React.createElement(\"div\", {\n        className: \"checkinQs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, checkinsEl), addQ), React.createElement(LogoutButtonFB, {\n        logout: this.props.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserTab;\n}(React.Component);\n\nexport default UserTab;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/UserTab.js"],"names":["React","Component","AddCheckin","$","withFirebase","Avatar","CheckInRow","Dropdown","autosize","StaticUserData","LogoutButton","props","logout","firebase","doSignOut","LogoutButtonFB","UserTab","setEditMode","bool","setState","editMode","state","madeChanges","name","bio","location","pronouns","setUserInfo","user","uid","update","checkinFreq","setMadeChanges","setAddMode","addMode","addCheckin","obj","arr","checkins","push","setCheckins","removeCheckinAt","index","splice","uploadPpf","event","firstFile","target","files","task","photos","put","on","snapshot","progress","bytesTransferred","totalBytes","error","ref","getDownloadURL","then","downloadURL","PpfURL","setPpfURL","onChangeUserInfo","value","setPronouns","pronoun","NULL_KEY","setCheckinFreq","triggeredIndex","tempFreq","cornerButton","pic","bioEl","locationEl","pronounsEl","addQ","freq","allPronouns","FEMALE_PRONOUN","MALE_PRONOUN","NON_PRONOUN","freqButtons","getDaysOfWeek","map","item","className","color","icon","checkinCategories","i","length","checkin","console","log","text","category","getMiscCategory","checkinsEl","el","unshift","style","display"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport AddCheckin from './Network/AddCheckin';\nimport $ from 'jquery';\nimport { withFirebase } from './Firebase';\nimport Avatar from './Misc/Avatar';\nimport CheckInRow from './Network/CheckinRow';\nimport Dropdown from './Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../data/StaticUserData'\n\nconst LogoutButton = (props) => {\n  return (\n    <button id=\"logout-but\"\n      onClick={() => {\n        props.logout();\n        props.firebase.doSignOut();\n      }}>Logout</button>\n  )\n};\n\nconst LogoutButtonFB = withFirebase(LogoutButton);\n\n\nclass UserTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      checkins: this.props.checkins,\n      name: this.props.name,\n      bio: this.props.bio,\n      location: this.props.location,\n      pronouns: this.props.pronouns,\n      checkinFreq: this.props.checkinFreq,\n      addMode: false,\n      PpfURL: this.props.PpfURL,\n      madeChanges: false,\n\n    };\n  }\n\n  componentDidMount() {\n    autosize($('textarea'));\n  }\n\n\n  setEditMode = (bool) => {\n    this.setState({\n      editMode: bool\n    });\n\n\n    //TODO: save changes\n    if (bool === false) {\n      if (this.state.madeChanges == true) {\n\n        let { name, bio, location, pronouns } = this.state;\n\n        this.props.setUserInfo(name, bio, location, pronouns);\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: this.state.checkinFreq\n          });\n\n        this.setMadeChanges(false)\n      }\n    }\n  };\n\n  setMadeChanges = (bool) => {\n    this.setState({\n      madeChanges: bool\n    });\n  };\n\n\n  setAddMode = (bool) => {\n    this.setState({\n      addMode: bool\n    });\n  };\n\n  addCheckin = (obj) => {\n    let arr = this.state.checkins;\n    arr.push(obj);\n    this.setState({ checkins: arr });\n    this.props.setCheckins(arr);\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: arr\n      });\n  }\n\n  removeCheckinAt = (index) => {\n    let arr = this.state.checkins;\n    arr.splice(index, 1);\n    this.setState({ checkins: arr });\n    this.props.setCheckins(arr);\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: arr\n      });\n  }\n\n  uploadPpf = (event) => {\n    let firstFile = event.target.files[0] // upload the first file only\n    let task = this.props.firebase.photos(this.props.uid).put(firstFile);\n\n    task.on('state_changed', (snapshot) => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n    }, (error) => {\n      // Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            PpfURL: downloadURL\n          });\n\n        this.setState({ PpfURL: downloadURL });\n        this.props.setPpfURL(downloadURL);\n      });\n    });\n  }\n\n  onChangeUserInfo = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    this.setMadeChanges(true)\n  };\n\n  setPronouns = (pronoun) => {\n    if (pronoun == StaticUserData.NULL_KEY) {\n      this.setState({ pronouns: null })\n      return;\n    }\n\n    this.setState({ pronouns: pronoun })\n    this.setMadeChanges(true)\n  }\n\n  setCheckinFreq = (triggeredIndex) => {\n    let tempFreq = this.state.checkinFreq;\n\n    tempFreq[triggeredIndex] = !tempFreq[triggeredIndex];\n\n    this.setState({ checkinFreq: tempFreq })\n    this.setMadeChanges(true)\n  }\n\n  render() {\n    const { pronouns } = this.state;\n\n\n    let cornerButton,\n      pic,\n      name,\n      bioEl,\n      locationEl,\n      pronounsEl,\n      checkins,\n      addQ,\n      freq;\n\n\n    if (this.state.editMode) {\n      cornerButton = (\n        <button className=\"edit done\" onClick={() => this.setEditMode(false)}>Done</button>\n      );\n      pic = (\n        <div>\n          <input type=\"file\" accept=\"image/*\" id=\"ppf-upload\" onChange={this.uploadPpf} />\n          <label className=\"edit-pic\" htmlFor=\"ppf-upload\">\n            <Avatar PpfURL={this.state.PpfURL}\n              content={\n                <div className=\"edit-pic-but\">\n                  <span className=\"jam jam-pencil\"></span>\n                </div>\n              }\n            />\n          </label>\n        </div>\n      );\n      name = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            Full name\n        </span>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className=\"profile-name\"\n            placeholder=\"Full name\"\n            onChange={this.onChangeUserInfo}\n            value={this.state.name}></input>\n        </div>\n\n      );\n\n      bioEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            About me\n        </span>\n          <textarea\n            name=\"bio\"\n            rows=\"2\"\n            className=\"profile-bio\"\n            placeholder=\"Write about yourself.\"\n            value={this.state.bio}\n            onChange={this.onChangeUserInfo}>\n          </textarea>\n        </div>\n\n      );\n\n      locationEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            Location\n        </span>\n          <input\n            name=\"location\"\n            type=\"text\"\n            className=\"profile-location\"\n            placeholder=\"Where are you?\"\n            onChange={this.onChangeUserInfo}\n            value={this.state.location}></input>\n\n        </div>\n\n      );\n\n      pronounsEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            Pronouns\n          </span>\n          <Dropdown\n            options={[\n              StaticUserData.allPronouns[StaticUserData.NULL_KEY],\n              StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]\n            ]}\n            onChange={this.setPronouns}\n            selected={StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index}\n          ></Dropdown>\n        </div>\n      );\n\n      let freqButtons = StaticUserData.getDaysOfWeek().map((item, index) => {\n        let className = \"\";\n        if (this.state.checkinFreq[index] == false) {\n          className = \"disable\";\n        }\n        return <button\n          key={'freq_' + index}\n          className={className}\n          onClick={() => this.setCheckinFreq(index)}>\n          {item}\n        </button>;\n      }\n      );\n      freq = (\n        <div className=\"freq-days\">\n          {freqButtons}\n        </div>\n      );\n\n    }\n    else {\n      cornerButton = (\n        <button className=\"edit\" onClick={() => this.setEditMode(true)}><span className=\"jam jam-pencil\" style={{ color: '#9FC6C1' }}></span></button>\n      );\n      pic = (\n        <Avatar PpfURL={this.state.PpfURL} />\n      );\n      name = (\n        <div className=\"profile-name\">{this.state.name}</div>\n      );\n\n      if (this.state.bio != null) {\n        bioEl = <p className=\"profile-bio\">\n          {this.state.bio ? this.state.bio : null}\n        </p>\n      } else {\n        bioEl = null;\n      }\n\n      if (this.state.location != null) {\n        locationEl = <div className=\"profile-location\">\n          <span className=\"jam checkicon jam-map-marker\"></span>\n          {this.state.location}\n        </div>;\n      } else {\n        locationEl = null;\n      }\n\n\n      if (pronouns != null) {\n\n        pronounsEl = <div className=\"profile-pronouns\">\n          <span className={\"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon}></span>\n          {' ' + pronouns}\n        </div>;\n      }\n      else {\n        pronounsEl = null;\n      }\n\n\n      let freqButtons = StaticUserData.getDaysOfWeek().map((item, index) => {\n        let className = \"\";\n        if (this.state.checkinFreq != null && this.state.checkinFreq[index] == false) {\n          className = \"disable\";\n        }\n        return <div\n          key={'freq_' + index}\n          className={className}>\n          {item}\n        </div>;\n      }\n      );\n      freq = (\n        <div className=\"freq-days\">\n          {freqButtons}\n        </div>\n      );\n    }\n\n    if (this.state.addMode) {\n      addQ = (\n        <AddCheckin\n          setAddMode={this.setAddMode}\n          uid={this.props.uid}\n          addCheckin={this.addCheckin}\n          categories={this.props.checkinCategories}\n        />\n      );\n    } else {\n      addQ = (\n        <button className=\"add-checkin\" onClick={() => { this.setAddMode(true) }}>Add check-in\n        </button>\n      );\n    }\n\n    checkins = {};\n    for (let i = 0; i < this.state.checkins.length; i++) {\n      let checkin = this.state.checkins[i];\n      console.log(checkin.text + ' .. category: '+checkin.category);\n      if (checkin.category == null || checkin.category == '') {\n        checkin.category = StaticUserData.getMiscCategory();\n      }\n\n      if (!(checkin.category in checkins)) {\n        checkins[checkin.category] = [];\n      }\n\n      checkins[checkin.category].push(\n        <CheckInRow\n          checkin={checkin}\n          removeCheckinAt={this.removeCheckinAt}\n          index={i}\n          trash={this.state.editMode}\n        />\n      );\n    }\n\n    let checkinsEl = [];\n    for (let category in checkins) {\n      let el = <div className={\"qcat \" + category}>\n        <h2>{category}</h2>\n        <ul className=\"your-checkins\">\n          {checkins[category]}\n        </ul>\n      </div>;\n\n      if (category == StaticUserData.getMiscCategory()) {\n        console.log(category + ' is misc ');\n        checkinsEl.push(el);\n      } else {\n        checkinsEl.unshift(el);\n      }\n    }\n\n    // console.log(JSON.stringify(checkinsEl));\n\n    let style = {};\n    if (this.state.editMode) {\n      style = {\n        display: 'contents'\n      }\n    }\n\n    return (\n      <section className=\"user\">\n        {cornerButton}\n        {pic}\n        {name}\n        {bioEl}\n        <div className=\"profile-footer\" style={style}>\n          {locationEl}\n          {pronounsEl}\n        </div>\n\n\n\n\n        <div className=\"check-in-edit\">\n          <h2>Your check-in</h2>\n\n\n          <h3>Check-in frequency</h3>\n          {freq}\n\n          <h3>Check-in questions</h3>\n          <div className=\"checkinQs\">\n            {checkinsEl}\n          </div>\n          {addQ}\n        </div>\n        <LogoutButtonFB\n          logout={this.props.logout}\n        />\n\n      </section>\n    );\n  }\n}\n\n\nexport default UserTab;"]},"metadata":{},"sourceType":"module"}