{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/Conversation.js\";\nimport React, { Component } from 'react';\nimport Avatar from '../Misc/Avatar';\nimport EditButton from './EditButton';\n/*\nprops\n uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      isMyPost: uid = this.uid\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n*/\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Conversation, _React$Component);\n\n  function Conversation(props) {\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conversation).call(this, props));\n\n    _this.setShowEdit = function (bool) {\n      _this.setState({\n        showEdit: bool\n      });\n    };\n\n    _this.getEditOptions = function () {\n      var options = [{\n        text: 'Delete',\n        onClick: _this.deletePost,\n        class: 'red'\n      }, {\n        text: 'Edit',\n        onClick: _this.editPost,\n        class: 'green'\n      }];\n      return options;\n    };\n\n    _this.state = {\n      showEdit: false\n    };\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classN,\n          mouseEnter = null,\n          mouseLeave = null;\n\n      if (!props.isMyPost) {\n        classN = 'reply';\n      } else {\n        classN = 'comment';\n\n        mouseEnter = function mouseEnter() {\n          return _this2.setShowEdit(true);\n        };\n\n        mouseLeave = function mouseLeave() {\n          return _this2.setShowEdit(false);\n        };\n      }\n\n      return React.createElement(\"div\", {\n        className: classN,\n        onMouseEnter: mouseEnter,\n        onMouseLeave: mouseLeave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        PpfURL: this.props.PpfURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bubble\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.message), this.state.showEdit == true ? React.createElement(EditButton, {\n        modalOptions: this.getEditOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return Conversation;\n}(React.Component);\n\n;\nexport default Conversation;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/Conversation.js"],"names":["React","Component","Avatar","EditButton","Conversation","props","setShowEdit","bool","setState","showEdit","getEditOptions","options","text","onClick","deletePost","class","editPost","state","classN","mouseEnter","mouseLeave","isMyPost","PpfURL","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA;;;;;;;;;;IASMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,UAOnBC,WAPmB,GAOL,UAACC,IAAD,EAAU;AACtB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF;AAAZ,OAAd;AACD,KATkB;;AAAA,UAWnBG,cAXmB,GAWF,YAAM;AACrB,UAAIC,OAAO,GAAG,CACZ;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,OAAO,EAAE,MAAKC,UAFhB;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADY,EAMZ;AACEH,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,OAAO,EAAE,MAAKG,QAFhB;AAGED,QAAAA,KAAK,EAAE;AAHT,OANY,CAAd;AAYA,aAAOJ,OAAP;AACD,KAzBkB;;AAEjB,UAAKM,KAAL,GAAa;AACXR,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;6BAuBQ;AAAA;;AACP,UAAIS,MAAJ;AAAA,UAAYC,UAAU,GAAG,IAAzB;AAAA,UAA+BC,UAAU,GAAG,IAA5C;;AAEA,UAAI,CAACf,KAAK,CAACgB,QAAX,EAAqB;AACnBH,QAAAA,MAAM,GAAG,OAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAG,SAAT;;AACAC,QAAAA,UAAU,GAAG;AAAA,iBAAM,MAAI,CAACb,WAAL,CAAiB,IAAjB,CAAN;AAAA,SAAb;;AACAc,QAAAA,UAAU,GAAG;AAAA,iBAAM,MAAI,CAACd,WAAL,CAAiB,KAAjB,CAAN;AAAA,SAAb;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAEY,MAAhB;AACE,QAAA,YAAY,EAAEC,UADhB;AAEE,QAAA,YAAY,EAAEC,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKf,KAAL,CAAWiB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,KAAL,CAAWkB,OADd,CALF,EAQG,KAAKN,KAAL,CAAWR,QAAX,IAAuB,IAAvB,GACC,oBAAC,UAAD;AACE,QAAA,YAAY,EAAE,KAAKC,cAAL,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAIG,IAZN,CADF;AAgBD;;;;EAxDwBV,KAAK,CAACC,S;;AAyDhC;AAED,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from '../Misc/Avatar';\nimport EditButton from './EditButton';\n/*\nprops\n uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      isMyPost: uid = this.uid\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n*/\nclass Conversation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEdit: false\n    }\n  }\n\n  setShowEdit = (bool) => {\n    this.setState({ showEdit: bool })\n  }\n\n  getEditOptions = () => {\n    let options = [\n      {\n        text: 'Delete',\n        onClick: this.deletePost,\n        class: 'red'\n      },\n      {\n        text: 'Edit',\n        onClick: this.editPost,\n        class: 'green'\n      }\n    ];\n    return options;\n  }\n\n\n  render() {\n    let classN, mouseEnter = null, mouseLeave = null;\n\n    if (!props.isMyPost) {\n      classN = 'reply';\n    } else {\n      classN = 'comment';\n      mouseEnter = () => this.setShowEdit(true);\n      mouseLeave = () => this.setShowEdit(false)\n    }\n\n    return (\n      <div className={classN}\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}\n      >\n        <Avatar PpfURL={this.props.PpfURL} />\n        <div className=\"bubble\">\n          {this.props.message}\n        </div>\n        {this.state.showEdit == true ?\n          <EditButton\n            modalOptions={this.getEditOptions()}\n          />\n          : null}\n      </div>\n    );\n  }\n};\n\nexport default Conversation;\n"]},"metadata":{},"sourceType":"module"}