{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/CommentBox.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData';\n/*\n  {\n        uid: 'fdsadsadaad'\n        PpfURL: '...'\n        poster: true //is message from poster,\n        timestamp: '..\n        message: 'hi i love'\n        \n      },\n*/\n\n/*\nprops:\n      uid,\n      PpfURL,\n      poster,\n      message,\n      firebase,\n      postid\n*/\n\nvar CommentBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentBox, _React$Component);\n\n  function CommentBox(props) {\n    var _this;\n\n    _classCallCheck(this, CommentBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentBox).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState({\n        commentBox: event.target.value\n      });\n    };\n\n    _this.submitComment = function () {\n      var comment = _this.state.commentBox;\n      var data = {\n        uid: _this.props.uid,\n        PpfURL: _this.props.PpfURL,\n        poster: _this.props.poster,\n        timestamp: new Date().toString(),\n        message: comment\n      };\n\n      _this.props.firebase.postConversation(_this.props.postid).add(data);\n\n      _this.setState({\n        commentBox: null\n      });\n\n      _this.comment.value = \"\";\n    };\n\n    _this.state = {\n      commentBox: null\n    };\n    return _this;\n  }\n\n  _createClass(CommentBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.showComments == false) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"leave-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"1\",\n        placeholder: StaticUserData.commentPlaceholder(),\n        ref: function ref(el) {\n          return _this2.comment = el;\n        },\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.submitComment,\n        disabled: this.state.commentBox == null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-paper-plane\",\n        style: {\n          color: '#9FC6C1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CommentBox;\n}(React.Component);\n\n;\nexport default CommentBox;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/CommentBox.js"],"names":["React","$","autosize","StaticUserData","CommentBox","props","onChange","event","setState","commentBox","target","value","submitComment","comment","state","data","uid","PpfURL","poster","timestamp","Date","toString","message","firebase","postConversation","postid","add","showComments","commentPlaceholder","el","color","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA;;;;;;;;;;;AAWA;;;;;;;;;;IASMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAWnBC,QAXmB,GAWR,UAAAC,KAAK,EAAI;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACD,KAbkB;;AAAA,UAenBC,aAfmB,GAeH,YAAM;AACpB,UAAIC,OAAO,GAAG,MAAKC,KAAL,CAAWL,UAAzB;AAEA,UAAIM,IAAI,GAAG;AACTC,QAAAA,GAAG,EAAE,MAAKX,KAAL,CAAWW,GADP;AAETC,QAAAA,MAAM,EAAE,MAAKZ,KAAL,CAAWY,MAFV;AAGTC,QAAAA,MAAM,EAAE,MAAKb,KAAL,CAAWa,MAHV;AAITC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,QAAX,EAJF;AAKTC,QAAAA,OAAO,EAAET;AALA,OAAX;;AAQA,YAAKR,KAAL,CAAWkB,QAAX,CAAoBC,gBAApB,CAAqC,MAAKnB,KAAL,CAAWoB,MAAhD,EAAwDC,GAAxD,CAA4DX,IAA5D;;AAEA,YAAKP,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACA,YAAKI,OAAL,CAAaF,KAAb,GAAqB,EAArB;AACD,KA9BkB;;AAEjB,UAAKG,KAAL,GAAa;AACXL,MAAAA,UAAU,EAAE;AADD,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClBP,MAAAA,QAAQ,CAACD,CAAC,CAAC,UAAD,CAAF,CAAR;AACD;;;6BAwBQ;AAAA;;AACP,UAAI,KAAKI,KAAL,CAAWsB,YAAX,IAA2B,KAA/B,EAAsC;AACpC,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,IAAI,EAAC,GAAf;AACE,QAAA,WAAW,EAAExB,cAAc,CAACyB,kBAAf,EADf;AAEE,QAAA,GAAG,EAAE,aAAAC,EAAE;AAAA,iBAAI,MAAI,CAAChB,OAAL,GAAegB,EAAnB;AAAA,SAFT;AAGE,QAAA,QAAQ,EAAE,KAAKvB,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKM,aAAtB;AAAqC,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWL,UAAX,IAAyB,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAsC,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE;AAAT,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF;AAYD;;;;EAnDsB9B,KAAK,CAAC+B,S;;AAoD9B;AAED,eAAe3B,UAAf","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData';\n/*\n  {\n        uid: 'fdsadsadaad'\n        PpfURL: '...'\n        poster: true //is message from poster,\n        timestamp: '..\n        message: 'hi i love'\n        \n      },\n*/\n\n/*\nprops:\n      uid,\n      PpfURL,\n      poster,\n      message,\n      firebase,\n      postid\n*/\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentBox: null\n    }\n  }\n\n  componentDidMount() {\n    autosize($('textarea'));\n  }\n\n  onChange = event => {\n    this.setState({ commentBox: event.target.value });\n  };\n\n  submitComment = () => {\n    let comment = this.state.commentBox;\n\n    let data = {\n      uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n    };\n\n    this.props.firebase.postConversation(this.props.postid).add(data);\n\n    this.setState({ commentBox: null });\n    this.comment.value = \"\";\n  }\n\n\n  render() {\n    if (this.props.showComments == false) {\n      return null;\n    }\n\n    return (\n      <div className=\"leave-comment\">\n        <textarea rows=\"1\"\n          placeholder={StaticUserData.commentPlaceholder()}\n          ref={el => this.comment = el}\n          onChange={this.onChange}></textarea>\n\n        <button onClick={this.submitComment} disabled={this.state.commentBox == null}>\n          <span className=\"jam jam-paper-plane\" style={{ color: '#9FC6C1' }} ></span>\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}