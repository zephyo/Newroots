{"ast":null,"code":"import _defineProperty from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/User/UserTab.js\";\n\nimport React from 'react';\nimport $ from 'jquery';\nimport Avatar from '../Misc/Avatar';\nimport UploadProfilePicture from '../Misc/UploadProfilePicture';\nimport Dropdown from '../Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData';\nimport Settings from './Settings/Settings';\nimport CheckinModule from './CheckinModule';\n\nvar EditInput = function EditInput(props) {\n  return React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", {\n    name: props.name,\n    type: \"text\",\n    className: \"profile-\" + props.name,\n    placeholder: props.placeholder,\n    value: props.value,\n    onChange: _this.onChangeUserInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nvar UserTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserTab, _React$Component);\n\n  function UserTab(props) {\n    var _this2;\n\n    _classCallCheck(this, UserTab);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(UserTab).call(this, props));\n\n    _this2.setEditMode = function (bool) {\n      _this2.setState({\n        editMode: bool\n      });\n\n      if (bool === false) {\n        if (_this2.state.madeChanges == true) {\n          var _this2$state = _this2.state,\n              name = _this2$state.name,\n              bio = _this2$state.bio,\n              location = _this2$state.location,\n              pronouns = _this2$state.pronouns;\n\n          _this2.props.setUserInfo(name, bio, location, pronouns);\n\n          _this2.props.firebase.user(_this2.props.uid).update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: _this2.state.checkinFreq\n          });\n\n          _this2.setMadeChanges(false);\n        }\n      }\n    };\n\n    _this2.setMadeChanges = function (bool) {\n      return _this2.setState({\n        madeChanges: bool\n      });\n    };\n\n    _this2.setShowSettings = function (bool) {\n      return _this2.setState({\n        showSettings: bool\n      });\n    };\n\n    _this2.setCheckinFreq = function (newFreq) {\n      _this2.setState({\n        checkinFreq: newFreq\n      });\n\n      _this2.setMadeChanges(true);\n    };\n\n    _this2.onChangeUserInfo = function (event) {\n      _this2.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      _this2.setMadeChanges(true);\n    };\n\n    _this2.setPronouns = function (pronoun) {\n      if (pronoun == StaticUserData.NULL_KEY) {\n        _this2.setState({\n          pronouns: null\n        });\n\n        return;\n      }\n\n      _this2.setState({\n        pronouns: pronoun\n      });\n\n      _this2.setMadeChanges(true);\n    };\n\n    _this2.state = {\n      editMode: false,\n      name: _this2.props.name,\n      bio: _this2.props.bio,\n      location: _this2.props.location,\n      pronouns: _this2.props.pronouns,\n      checkinFreq: _this2.props.checkinFreq,\n      PpfURL: _this2.props.PpfURL,\n      madeChanges: false,\n      showSettings: false\n    };\n    return _this2;\n  }\n\n  _createClass(UserTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.showSettings == true) {\n        return React.createElement(Settings, {\n          firebase: this.props.firebase,\n          uid: this.props.uid,\n          removeUser: this.props.removeUser,\n          updateUserData: this.props.updateUserData,\n          goBack: function goBack() {\n            return _this3.setShowSettings(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      var _this$state = this.state,\n          pronouns = _this$state.pronouns,\n          editMode = _this$state.editMode,\n          name = _this$state.name,\n          bio = _this$state.bio,\n          location = _this$state.location;\n      var cornerButtons,\n          pic,\n          nameEl,\n          bioEl,\n          locationEl,\n          pronounsEl,\n          style = {};\n\n      if (editMode) {\n        style = {\n          display: 'contents'\n        };\n        cornerButtons = React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"edit done\",\n          onClick: function onClick() {\n            return _this3.setEditMode(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Save\"));\n        pic = React.createElement(UploadProfilePicture, {\n          firebase: this.props.firebase,\n          uid: this.props.uid,\n          PpfURL: this.state.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n        nameEl = React.createElement(EditInput, {\n          title: \"Full name\",\n          name: \"name\",\n          placeholder: \"Full name\",\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n        bioEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"About me\"), React.createElement(\"textarea\", {\n          name: \"bio\",\n          rows: \"2\",\n          className: \"profile-bio\",\n          placeholder: \"Write about yourself.\",\n          value: bio,\n          onChange: this.onChangeUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }));\n        locationEl = React.createElement(EditInput, {\n          title: \"Location\",\n          name: \"location\",\n          placeholder: \"Where are you?\",\n          value: location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n        pronounsEl = React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"input-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Pronouns\"), React.createElement(Dropdown, {\n          options: [StaticUserData.allPronouns[StaticUserData.NULL_KEY], StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN], StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]],\n          onChange: this.setPronouns,\n          selected: StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }));\n      } else {\n        cornerButtons = React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"settings\",\n          onClick: function onClick() {\n            return _this3.setShowSettings(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-cog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"edit\",\n          onClick: function onClick() {\n            return _this3.setEditMode(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-pencil\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        })));\n        pic = React.createElement(Avatar, {\n          PpfURL: this.state.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        });\n        nameEl = React.createElement(\"div\", {\n          className: \"profile-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, name);\n\n        if (bio != null) {\n          bioEl = React.createElement(\"p\", {\n            className: \"profile-bio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, bio ? bio : null);\n        }\n\n        if (location != null) {\n          locationEl = React.createElement(\"div\", {\n            className: \"profile-location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-map-marker\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }), location);\n        }\n\n        if (pronouns != null) {\n          pronounsEl = React.createElement(\"div\", {\n            className: \"profile-pronouns\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }), ' ' + pronouns);\n        }\n      }\n\n      return React.createElement(\"section\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, cornerButtons, pic, nameEl, bioEl, React.createElement(\"div\", {\n        className: \"profile-footer\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, locationEl, pronounsEl), React.createElement(CheckinModule, {\n        checkins: this.props.checkins,\n        checkinFreq: this.state.checkinFreq,\n        firebase: this.props.firebase,\n        uid: this.props.uid,\n        setCheckinFreq: this.setCheckinFreq,\n        editMode: this.state.editMode,\n        checkinCategories: this.props.checkinCategories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserTab;\n}(React.Component);\n\nexport default UserTab;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/User/UserTab.js"],"names":["React","$","Avatar","UploadProfilePicture","Dropdown","autosize","StaticUserData","Settings","CheckinModule","EditInput","props","title","name","placeholder","value","onChangeUserInfo","UserTab","setEditMode","bool","setState","editMode","state","madeChanges","bio","location","pronouns","setUserInfo","firebase","user","uid","update","checkinFreq","setMadeChanges","setShowSettings","showSettings","setCheckinFreq","newFreq","event","target","setPronouns","pronoun","NULL_KEY","PpfURL","removeUser","updateUserData","cornerButtons","pic","nameEl","bioEl","locationEl","pronounsEl","style","display","allPronouns","FEMALE_PRONOUN","MALE_PRONOUN","NON_PRONOUN","index","icon","checkins","checkinCategories","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport $ from 'jquery';\nimport Avatar from '../Misc/Avatar';\nimport UploadProfilePicture from '../Misc/UploadProfilePicture';\nimport Dropdown from '../Misc/Dropdown';\nimport autosize from 'autosize';\nimport StaticUserData from '../../data/StaticUserData'\nimport Settings from './Settings/Settings'\nimport CheckinModule from './CheckinModule'\n\n\nconst EditInput = (props) => {\n  return <div className=\"input-container\">\n    <span className=\"input-label\">\n      {props.title}\n    </span>\n    <input\n      name={props.name}\n      type=\"text\"\n      className={\"profile-\" + props.name}\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={this.onChangeUserInfo}>\n    </input>\n  </div>\n}\n\nclass UserTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      name: this.props.name,\n      bio: this.props.bio,\n      location: this.props.location,\n      pronouns: this.props.pronouns,\n      checkinFreq: this.props.checkinFreq,\n      PpfURL: this.props.PpfURL,\n      madeChanges: false,\n      showSettings: false\n    };\n  }\n\n  componentDidMount() {\n    autosize($('textarea'));\n  }\n\n  setEditMode = (bool) => {\n    this.setState({ editMode: bool });\n\n    if (bool === false) {\n      if (this.state.madeChanges == true) {\n\n        let { name, bio, location, pronouns } = this.state;\n\n        this.props.setUserInfo(name, bio, location, pronouns);\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            name: name,\n            bio: bio == null ? null : bio,\n            location: location == null ? null : location,\n            pronouns: pronouns == null ? null : pronouns,\n            checkinFreq: this.state.checkinFreq\n          });\n\n        this.setMadeChanges(false)\n      }\n    }\n  };\n\n  setMadeChanges = (bool) => this.setState({ madeChanges: bool });\n\n  setShowSettings = (bool) => this.setState({ showSettings: bool });\n\n  setCheckinFreq = (newFreq) => {\n    this.setState({ checkinFreq: newFreq })\n    this.setMadeChanges(true)\n  }\n\n  onChangeUserInfo = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    this.setMadeChanges(true)\n  };\n\n  setPronouns = (pronoun) => {\n    if (pronoun == StaticUserData.NULL_KEY) {\n      this.setState({ pronouns: null })\n      return;\n    }\n\n    this.setState({ pronouns: pronoun })\n    this.setMadeChanges(true)\n  }\n\n  render() {\n    if (this.state.showSettings == true) {\n      return <Settings\n        firebase={this.props.firebase}\n        uid={this.props.uid}\n        removeUser={this.props.removeUser}\n        updateUserData={this.props.updateUserData}\n        goBack={() => this.setShowSettings(false)}\n      />\n    }\n\n    const { pronouns, editMode, name, bio, location } = this.state;\n\n    let cornerButtons,\n      pic,\n      nameEl,\n      bioEl,\n      locationEl,\n      pronounsEl,\n      style = {};\n\n    if (editMode) {\n      style = {\n        display: 'contents'\n      }\n\n      cornerButtons = (\n        <div className=\"header\">\n          <button className=\"edit done\" onClick={() => this.setEditMode(false)}>Save</button>\n        </div>\n      );\n      pic = <UploadProfilePicture\n        firebase={this.props.firebase}\n        uid={this.props.uid}\n        PpfURL={this.state.PpfURL} />;\n\n      nameEl = (\n        <EditInput\n          title='Full name'\n          name='name'\n          placeholder='Full name'\n          value={name}\n        />\n      );\n\n      bioEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            About me\n        </span>\n          <textarea\n            name=\"bio\"\n            rows=\"2\"\n            className=\"profile-bio\"\n            placeholder=\"Write about yourself.\"\n            value={bio}\n            onChange={this.onChangeUserInfo}>\n          </textarea>\n        </div>\n\n      );\n\n      locationEl = (\n        <EditInput\n          title='Location'\n          name='location'\n          placeholder='Where are you?'\n          value={location}\n        />\n      );\n\n      pronounsEl = (\n        <div className=\"input-container\">\n          <span className=\"input-label\">\n            Pronouns\n          </span>\n          <Dropdown\n            options={[\n              StaticUserData.allPronouns[StaticUserData.NULL_KEY],\n              StaticUserData.allPronouns[StaticUserData.FEMALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.MALE_PRONOUN],\n              StaticUserData.allPronouns[StaticUserData.NON_PRONOUN]\n            ]}\n            onChange={this.setPronouns}\n            selected={StaticUserData.allPronouns[pronouns != null ? pronouns : StaticUserData.NULL_KEY].index}\n          ></Dropdown>\n        </div>\n      );\n\n    }\n    else {\n      cornerButtons = (\n        <div className=\"header\">\n          <button className=\"settings\" onClick={() => this.setShowSettings(true)}>\n            <span className=\"jam jam-cog\"></span>\n          </button>\n          <button className=\"edit\" onClick={() => this.setEditMode(true)}>\n            <span className=\"jam jam-pencil\"></span>\n          </button>\n        </div>\n      );\n\n      pic = (\n        <Avatar PpfURL={this.state.PpfURL} />\n      );\n\n      nameEl = (\n        <div className=\"profile-name\">{name}</div>\n      );\n\n      if (bio != null) {\n        bioEl = <p className=\"profile-bio\">\n          {bio ? bio : null}\n        </p>\n      }\n\n      if (location != null) {\n        locationEl = <div className=\"profile-location\">\n          <span className=\"jam checkicon jam-map-marker\"></span>\n          {location}\n        </div>;\n      }\n\n      if (pronouns != null) {\n        pronounsEl = <div className=\"profile-pronouns\">\n          <span className={\"jam checkicon jam-\" + StaticUserData.allPronouns[pronouns].icon}></span>\n          {' ' + pronouns}\n        </div>;\n      }\n    }\n\n    return (\n      <section className=\"user\">\n        {cornerButtons}\n        {pic}\n        {nameEl}\n        {bioEl}\n        <div className=\"profile-footer\" style={style}>\n          {locationEl}\n          {pronounsEl}\n        </div>\n\n        <CheckinModule\n          checkins={this.props.checkins}\n          checkinFreq={this.state.checkinFreq}\n          firebase={this.props.firebase}\n          uid={this.props.uid}\n          setCheckinFreq={this.setCheckinFreq}\n          editMode={this.state.editMode}\n          checkinCategories={this.props.checkinCategories}\n        />\n\n      </section>\n    );\n  }\n}\n\n\nexport default UserTab;"]},"metadata":{},"sourceType":"module"}