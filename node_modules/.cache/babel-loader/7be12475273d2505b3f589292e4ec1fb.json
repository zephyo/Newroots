{"ast":null,"code":"import _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gollyzoom/Documents/GitHub/treehacks/src/components/CheckinPost.js\";\nimport React, { Component } from 'react';\nimport Avatar from './Avatar';\n/*\n  props:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -checkinData : array\n\n  -conversation :array\n\n  - example of checkinData: \n    [\n      {\n        q: 'How are you feeling today?'\n        type: 'range'\n        answer: '5',\n        comment: 'hi'\n      },\n      {\n        q: 'Did you take your medication?'\n        type: 'yes/no'\n        answer: 'yes'\n        comment: 'hi'\n      },\n      {\n        q: 'u gey?'\n        type: 'text'\n        answer: 'dsadsdsaadadada'\n      }\n    ]\n*/\n\nvar CheckinPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckinPost, _React$Component);\n\n  function CheckinPost(props) {\n    _classCallCheck(this, CheckinPost);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckinPost).call(this, props));\n  }\n\n  _createClass(CheckinPost, [{\n    key: \"render\",\n    value: function render() {\n      var checkinData = this.props.checkinData;\n      var editButton = null;\n\n      if (this.props.isMyPost) {\n        editButton = React.createElement(\"button\", {\n          className: \"user-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-pencil\",\n          style: {\n            color: '#EFF0DA'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      }\n\n      var checkins = [];\n\n      for (var i = 0; i < checkinData.length; i++) {\n        var checkin = checkinData[i];\n        var el = null;\n\n        if (checkin.type == 'range') {\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"mood\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, checkin.q, \" \"), React.createElement(\"div\", {\n            className: \"mood-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, checkin.answer)), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, checkin.comment));\n        } else if (checkin.type == 'yes/no') {\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"mood\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, checkin.q), checkin.answer == 'yes' ? React.createElement(\"div\", {\n            className: \"mood-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam jam-check\",\n            style: {\n              color: '#EFF0DA'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          })) : React.createElement(\"div\", {\n            className: \"mood-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"jam jam-close\",\n            style: {\n              color: '#EFF0DA'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, checkin.comment));\n        } else if (checkin.type == 'text') {\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"mood\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, checkin.q, \" \")), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, checkin.comment));\n        }\n\n        checkins.push(el);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"checkin activity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        PpfURL: this.props.PpfURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"name-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"span\", {\n        className: \"sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\xA0checked in\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.timestamp))), editButton), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, checkins), React.createElement(\"div\", {\n        className: \"leave-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"comment..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-paper-plane\",\n        style: {\n          color: '#9FC6C1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CheckinPost;\n}(React.Component);\n\n;\nexport default CheckinPost;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/CheckinPost.js"],"names":["React","Component","Avatar","CheckinPost","props","checkinData","editButton","isMyPost","color","checkins","i","length","checkin","el","type","q","answer","comment","push","PpfURL","name","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from './Avatar';\n\n\n\n/*\n  props:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -checkinData : array\n\n  -conversation :array\n\n  - example of checkinData: \n    [\n      {\n        q: 'How are you feeling today?'\n        type: 'range'\n        answer: '5',\n        comment: 'hi'\n      },\n      {\n        q: 'Did you take your medication?'\n        type: 'yes/no'\n        answer: 'yes'\n        comment: 'hi'\n      },\n      {\n        q: 'u gey?'\n        type: 'text'\n        answer: 'dsadsdsaadadada'\n      }\n    ]\n*/\nclass CheckinPost extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    let checkinData = this.props.checkinData;\n\n    let editButton = null;\n    if (this.props.isMyPost) {\n      editButton = (\n        <button className=\"user-edit\">\n          <span className=\"jam jam-pencil\" style={{ color: '#EFF0DA' }}></span>\n        </button>\n      );\n    }\n\n    let checkins = [];\n\n    for (var i = 0; i < checkinData.length; i++) {\n      let checkin = checkinData[i];\n      let el = null;\n\n      if (checkin.type == 'range') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q} </span>\n              <div className=\"mood-icon\">{checkin.answer}</div>\n            </div>\n            <div className=\"content\">{checkin.comment}</div>\n          </div>\n        );\n      }\n      else if (checkin.type == 'yes/no') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q}</span>\n              {checkin.answer == 'yes' ?\n                <div className=\"mood-icon\">\n                  <span className=\"jam jam-check\" style={{ color: '#EFF0DA' }}>\n\n                  </span>\n                </div>\n                :\n                <div className=\"mood-icon\">\n                  <span className=\"jam jam-close\" style={{ color: '#EFF0DA' }}>\n\n                  </span>\n                </div>\n              }\n            </div>\n            <div className=\"content\">{checkin.comment}</div>\n          </div>\n        );\n      }\n      else if (checkin.type == 'text') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q} </span>\n            </div>\n            <div className=\"content\">{checkin.comment}</div>\n          </div>\n        );\n      }\n      checkins.push(el);\n    }\n\n    return (\n      <div className=\"checkin activity\">\n        <div className=\"header\">\n          <Avatar PpfURL={this.props.PpfURL} />\n          <div className=\"name-date\">\n            <div><span className=\"name\">{this.props.name}</span>\n              <span className=\"sub\">&nbsp;checked in</span></div>\n            <div><span className=\"date\">{this.props.timestamp}</span></div>\n          </div>\n          {editButton}\n        </div>\n        <div className=\"content\">\n\n          {checkins}\n\n        </div>\n        <div className=\"leave-comment\">\n          <input type=\"text\" placeholder=\"comment..\" />\n          <button><span className=\"jam jam-paper-plane\" style={{ color: '#9FC6C1' }}></span></button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default CheckinPost;\n"]},"metadata":{},"sourceType":"module"}