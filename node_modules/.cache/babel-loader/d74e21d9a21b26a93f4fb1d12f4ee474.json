{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/Feed/Conversation.js\";\nimport React from 'react';\nimport ConvoBase from './ConvoBase';\nimport EditButton from './EditButton';\nimport ConversationEdit from './ConversationEdit';\n/*\nprops\n uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      isMyPost: uid = this.uid\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n*/\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Conversation, _React$Component);\n\n  function Conversation(props) {\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conversation).call(this, props));\n\n    _this.setShowEdit = function (bool) {\n      _this.setState({\n        showEdit: bool\n      });\n    };\n\n    _this.setIsEditing = function (bool) {\n      _this.setState({\n        isEditing: bool\n      });\n    };\n\n    _this.deleteComment = function () {\n      _this.props.deleteComment(_this.props.convoid);\n    };\n\n    _this.editComment = function () {\n      _this.setIsEditing(true);\n    };\n\n    _this.saveComment = function (newMessage) {\n      _this.props.editComment(_this.props.convoid, newMessage);\n\n      _this.setIsEditing(false);\n    };\n\n    _this.getEditOptions = function () {\n      var options = [{\n        text: 'Delete',\n        onClick: _this.deleteComment,\n        class: 'red'\n      }, {\n        text: 'Edit',\n        onClick: _this.editComment,\n        class: 'green'\n      }];\n      return options;\n    };\n\n    _this.state = {\n      showEdit: false,\n      isEditing: false\n    };\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isEditing) {\n        return React.createElement(ConversationEdit, {\n          PpfURL: this.props.PpfURL,\n          message: this.props.message,\n          Save: this.saveComment,\n          Cancel: function Cancel() {\n            return _this2.setIsEditing(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }\n\n      var mouseEnter = null,\n          mouseLeave = null;\n\n      if (this.props.isMyPost) {\n        mouseEnter = function mouseEnter() {\n          return _this2.setShowEdit(true);\n        };\n\n        mouseLeave = function mouseLeave() {\n          return _this2.setShowEdit(false);\n        };\n      }\n\n      return React.createElement(ConvoBase, {\n        isMyPost: this.props.isMyPost,\n        PpfURL: this.props.PpfURL,\n        message: this.props.message,\n        onMouseEnter: mouseEnter,\n        onMouseLeave: mouseLeave,\n        optionalContent: this.state.showEdit == true ? React.createElement(EditButton, {\n          modalOptions: this.getEditOptions(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }) : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Conversation;\n}(React.Component);\n\n;\nexport default Conversation;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/Feed/Conversation.js"],"names":["React","ConvoBase","EditButton","ConversationEdit","Conversation","props","setShowEdit","bool","setState","showEdit","setIsEditing","isEditing","deleteComment","convoid","editComment","saveComment","newMessage","getEditOptions","options","text","onClick","class","state","PpfURL","message","mouseEnter","mouseLeave","isMyPost","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ConvoBase from './ConvoBase';\nimport EditButton from './EditButton';\nimport ConversationEdit from './ConversationEdit'\n/*\nprops\n uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      isMyPost: uid = this.uid\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n*/\nclass Conversation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEdit: false,\n      isEditing: false\n    }\n  }\n\n  setShowEdit = (bool) => {\n    this.setState({ showEdit: bool })\n  }\n\n  setIsEditing = (bool) => {\n    this.setState({ isEditing: bool })\n  }\n\n  deleteComment = () => {\n    this.props.deleteComment(this.props.convoid);\n  }\n\n  editComment = () => {\n    this.setIsEditing(true);\n  }\n\n  saveComment = (newMessage) => {\n    this.props.editComment(this.props.convoid, newMessage)\n    this.setIsEditing(false)\n  }\n\n  getEditOptions = () => {\n    let options = [\n      {\n        text: 'Delete',\n        onClick: this.deleteComment,\n        class: 'red'\n      },\n      {\n        text: 'Edit',\n        onClick: this.editComment,\n        class: 'green'\n      }\n    ];\n    return options;\n  }\n\n  render() {\n    if (this.state.isEditing) {\n      return <ConversationEdit\n        PpfURL={this.props.PpfURL}\n        message={this.props.message}\n        Save={this.saveComment}\n        Cancel={() => this.setIsEditing(false)}\n      />;\n    }\n\n\n    let mouseEnter = null, mouseLeave = null;\n\n    if (this.props.isMyPost) {\n      mouseEnter = () => this.setShowEdit(true);\n      mouseLeave = () => this.setShowEdit(false)\n    }\n\n    return (\n      <ConvoBase\n        isMyPost={this.props.isMyPost}\n        PpfURL={this.props.PpfURL}\n        message={this.props.message}\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}\n        optionalContent={this.state.showEdit == true ?\n          <EditButton\n            modalOptions={this.getEditOptions()}\n          />\n          : null} />);\n  }\n};\n\nexport default Conversation;\n"]},"metadata":{},"sourceType":"module"}